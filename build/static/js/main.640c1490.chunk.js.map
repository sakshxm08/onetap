{"version":3,"sources":["contextStore/AllPostContext.js","contextStore/AuthContext.js","contextStore/PostContext.js","assets/OlxLogo.js","assets/SearchIcon.js","assets/Arrow.js","assets/SellButton.js","assets/SellButtonPlus.js","firebase/config.js","assets/CloseIcon/CloseIcon.js","Components/Search/Search.js","Components/Header/Header.js","Components/PostCards/PostCards.js","Components/DynamicPosts/DynamicPosts.js","Components/Banner/Banner.js","Components/Loading/BarLoading.js","Components/Posts/Posts.js","Components/Footer/Footer.js","Pages/Home.js","olx-logo.png","Components/Loading/SignUpLoading.js","Components/Signup/Signup.js","Pages/Signup.js","Components/Loading/RoundLoading.js","Components/Login/Login.js","Pages/Login.js","Components/Loading/GoLoading.js","Components/Create/Create.js","Pages/CreatePost.js","Components/View/View.js","Pages/ViewPost.js","Components/Pagination/Pagination.js","Components/ViewMoreAllPosts/AllPosts.js","Pages/ViewMore.js","Routes/MainRoutes.js","App.js","index.js"],"names":["AllPostContext","createContext","ContextAllPost","children","useState","allPost","setAllPost","Provider","value","AuthContext","ContextAuth","user","setUser","PostContext","ContextPost","postContent","setPostContent","OlxLogo","version","id","xmlns","x","y","width","viewBox","style","height","fill","opacity","stroke","d","Search","props","color","fillRule","cursor","className","Arrow","SellButton","SellButtonPlus","params","Firebase","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","CloseIcon","useContext","history","useHistory","filteredData","setFilteredData","wordEntered","setWordEntered","type","onChange","event","searchWord","target","newFilter","filter","name","toLowerCase","includes","category","placeholders","onClick","length","alert","push","slice","map","key","Header","placeholder","handleSelectedSearch","class","displayName","to","auth","signOut","then","PostCards","product","index","src","url","alt","price","location","createdAt","DynamicPosts","displayCards","itm","Banner","setCategory","BarLoading","Posts","posts","setPosts","posts2","setPosts2","loading","setLoading","loading2","setLoading2","useEffect","firestore","collection","orderBy","get","snapshot","allPostsDescendingOder","docs","data","allPostsAscendingOder","quickMenuCards","freshRecomendationCards","Footer","Home","onAuthStateChanged","SignUpLoading","Signup","setName","email","setEmail","phone","setPhone","password","setPassword","Logo","onSubmit","e","preventDefault","createUserWithEmailAndPassword","result","updateProfile","doc","uid","set","catch","error","message","window","reload","SignupPage","RoundLoading","Login","signInWithEmailAndPassword","LoginPage","GoLoading","Create","setPrice","description","setDescription","image","setImage","setLocation","URL","createObjectURL","files","date","Date","toDateString","storage","ref","put","getDownloadURL","add","userId","console","log","CreatePage","View","userDetails","setUserDetails","undefined","where","res","forEach","ViewPost","Pagination","setCurrentPage","activeItem","setActiveItem","numberOfPages","i","Math","ceil","showNextPage","clickedPage","Number","pagination","pageNumber","AllPosts","currentPage","indexOfLastDish","indexOfFirstDish","displayThesePosts","ViewMore","MainRoutes","exact","path","CreatePost","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.640c1490.chunk.js","sourcesContent":["import React,{createContext,useState} from 'react'\n\n\nexport const AllPostContext = createContext(null) ;\n\nfunction ContextAllPost({children}) {\n    const [allPost,setAllPost]=useState([])\n    return (\n        <AllPostContext.Provider value={{allPost,setAllPost}}>\n            {children}\n        </AllPostContext.Provider>\n    )\n}\n\nexport default ContextAllPost\n","import React,{useState,createContext} from 'react'\n\nexport const AuthContext = createContext(null)\n\nfunction ContextAuth({children}) {\n    const[user,setUser]=useState()\n    return (\n        <AuthContext.Provider value={{user,setUser}}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default ContextAuth\n","import React, { createContext,useState } from \"react\";\n\n\nexport const PostContext = createContext()\n\nconst ContextPost =({children})=>{\n    const[postContent,setPostContent]=useState([])\n\n    return (\n        <PostContext.Provider value={{postContent,setPostContent}}>\n            {children}\n        </PostContext.Provider>\n    )\n}\nexport default ContextPost","import React from \"react\";\n\nexport default function OlxLogo() {\n  return (\n    //     <svg\n    //   width=\"48px\"\n    //   height=\"48px\"\n    //   viewBox=\"0 0 1024 1024\"\n    //   data-aut-id=\"icon\"\n    //   fillRule=\"evenodd\"\n    // >\n    //   <path\n    //     className=\"rui-77aaa\"\n    //     d=\"M661.333 256v512h-128v-512h128zM277.333 298.667c117.824 0 213.333 95.531 213.333 213.333s-95.509 213.333-213.333 213.333c-117.824 0-213.333-95.531-213.333-213.333s95.509-213.333 213.333-213.333zM794.496 384l37.504 37.504 37.504-37.504h90.496v90.496l-37.504 37.504 37.504 37.504v90.496h-90.496l-37.504-37.504-37.504 37.504h-90.496v-90.496l37.504-37.504-37.504-37.504v-90.496h90.496zM277.333 426.667c-47.061 0-85.333 38.293-85.333 85.333s38.272 85.333 85.333 85.333c47.061 0 85.333-38.293 85.333-85.333s-38.272-85.333-85.333-85.333z\"\n    //   />\n    // </svg>\n    <svg\n      version=\"1.1\"\n      id=\"Layer_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      width=\"100%\"\n      viewBox=\"0 0 854 292\"\n      enable-background=\"new 0 0 854 292\"\n      style={{ height: \"50px\" }}\n    >\n      <path\n        fill=\"#000000\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M662.000000,293.000000 \n     C441.333344,293.000000 221.166672,293.000000 1.000000,293.000000 \n     C1.000000,195.666672 1.000000,98.333336 1.000000,1.000000 \n     C285.666656,1.000000 570.333313,1.000000 855.000000,1.000000 \n     C855.000000,98.333336 855.000000,195.666672 855.000000,293.000000 \n     C790.833313,293.000000 726.666687,293.000000 662.000000,293.000000 \n   M351.038422,181.573135 \n     C351.345398,181.744614 351.652344,181.916092 351.927216,182.019150 \n     C351.927216,182.019150 351.889648,182.084747 352.127472,182.701935 \n     C353.061615,183.191376 353.995728,183.680801 354.965607,184.091217 \n     C354.965607,184.091217 354.880066,184.076859 355.155426,184.731400 \n     C357.407288,185.881775 359.659149,187.032150 361.969727,188.122986 \n     C361.969727,188.122986 361.902313,188.073532 362.215515,188.766937 \n     C366.454468,189.777847 370.693420,190.788757 375.853821,192.019501 \n     C382.252258,191.618530 388.650726,191.217575 395.797485,190.919067 \n     C397.976868,189.956253 400.156281,188.993439 402.659393,188.122223 \n     C402.659393,188.122223 402.951660,187.955688 403.633759,188.021820 \n     C404.462738,187.376938 405.291718,186.732056 406.035370,186.093933 \n     C406.035370,186.093933 406.076447,186.169067 406.725708,186.028427 \n     C407.524780,185.378036 408.323853,184.727646 409.037323,184.102493 \n     C409.037323,184.102493 409.082794,184.179321 409.743042,184.032181 \n     C410.864594,183.048782 411.986145,182.065369 413.068848,181.016068 \n     C413.068848,181.016068 413.041077,181.087341 413.574371,180.959976 \n     C413.746368,180.652710 413.918396,180.345459 414.017517,180.017334 \n     C414.017517,180.017334 414.038635,180.090134 414.570923,179.956833 \n     C414.744385,179.650070 414.917847,179.343307 415.018127,179.018524 \n     C415.018127,179.018524 415.037567,179.091354 415.569672,178.957870 \n     C415.743042,178.651382 415.916443,178.344910 416.022430,178.072906 \n     C416.022430,178.072906 416.081512,178.120224 416.705688,177.864777 \n     C417.865082,176.273560 419.024445,174.682358 420.111755,173.040802 \n     C420.111755,173.040802 420.080902,173.123138 420.737976,172.834991 \n     C422.537781,168.907837 424.337616,164.980698 426.856140,160.672256 \n     C428.017975,153.401093 429.686340,146.259903 428.139893,138.710693 \n     C426.819763,132.266052 425.718994,125.931229 421.102173,120.968498 \n     C421.102173,120.968498 421.173157,120.923058 421.027313,120.276031 \n     C420.379395,119.475609 419.731445,118.675186 419.104156,117.956039 \n     C419.104156,117.956039 419.175934,117.912643 419.022461,117.244934 \n     C417.709473,115.795776 416.396515,114.346626 415.002472,112.988594 \n     C415.002472,112.988594 415.101532,112.917603 414.862885,112.291054 \n     C413.598633,111.470322 412.334381,110.649590 411.008667,109.908394 \n     C411.008667,109.908394 411.092346,109.964073 410.957153,109.432686 \n     C410.650940,109.259361 410.344727,109.086044 410.061707,108.986382 \n     C410.061707,108.986382 410.104034,108.921806 409.873596,108.303566 \n     C408.945312,107.810760 408.017029,107.317947 407.019684,106.889252 \n     C407.019684,106.889252 407.087891,106.954277 406.953674,106.420784 \n     C406.636078,106.296364 406.318481,106.171944 405.682983,105.879250 \n     C405.682983,105.879250 405.335846,105.973549 404.947388,105.385864 \n     C403.949890,104.939056 402.952362,104.492249 401.661957,103.877022 \n     C401.661957,103.877022 401.337036,103.969658 400.889923,103.331131 \n     C398.941315,102.848473 396.992737,102.365814 394.670166,101.152138 \n     C388.318787,100.759972 381.850922,99.453484 375.650085,100.243324 \n     C369.919281,100.973305 364.474548,103.949593 358.977417,105.902122 \n     C358.977417,105.902122 358.930603,105.835724 358.238190,105.976486 \n     C356.795410,106.961632 355.352631,107.946777 353.962280,108.994728 \n     C353.962280,108.994728 353.961273,108.912933 353.430176,109.044868 \n     C353.257080,109.351173 353.083984,109.657478 352.982239,109.896896 \n     C352.982239,109.896896 352.911438,109.829430 352.222870,109.971611 \n     C349.757507,112.617661 347.292175,115.263718 344.887543,117.964409 \n     C344.887543,117.964409 344.929413,117.894264 344.279999,118.155655 \n     C342.895996,120.764191 341.511993,123.372726 339.979126,126.414520 \n     C339.979126,126.414520 339.988007,126.872551 339.283966,127.185028 \n     C338.849854,127.851341 338.259674,128.463226 338.005432,129.192276 \n     C335.014038,137.770233 333.798187,146.691055 336.167511,155.427811 \n     C337.833618,161.571396 341.276733,167.233078 343.898804,173.032013 \n     C343.898804,173.032013 343.829407,173.076843 343.969635,173.725159 \n     C344.618805,174.519302 345.267975,175.313446 345.983551,176.069962 \n     C345.983551,176.069962 345.912720,176.041504 346.039246,176.574432 \n     C346.346252,176.745773 346.653290,176.917114 346.983978,177.015717 \n     C346.983978,177.015717 346.911621,177.040573 347.039917,177.574005 \n     C347.347382,177.746201 347.654816,177.918411 347.982361,178.017685 \n     C347.982361,178.017685 347.909576,178.038208 348.042725,178.570602 \n     C348.349457,178.744064 348.656158,178.917526 348.981781,179.017853 \n     C348.981781,179.017853 348.908997,179.038086 349.042786,179.570312 \n     C349.349487,179.743851 349.656219,179.917404 349.981750,180.017807 \n     C349.981750,180.017807 349.908997,180.038101 350.042236,180.569809 \n     C350.348541,180.742874 350.654846,180.915939 350.982788,181.015915 \n     C350.982788,181.015915 350.910553,181.040298 351.038422,181.573135 \n   M471.952423,132.410110 \n     C471.667480,132.241669 471.382568,132.073242 470.853210,131.279022 \n     C461.205170,121.627487 451.630432,111.900299 441.833893,102.401962 \n     C440.276154,100.891663 437.720764,100.410378 434.977051,99.156509 \n     C434.977051,129.742020 434.970917,158.871872 435.014679,188.001633 \n     C435.015717,188.681870 435.577820,189.361252 436.318787,190.810715 \n     C461.550873,190.873322 486.782928,190.942978 512.015015,190.956665 \n     C512.626587,190.957001 513.238464,190.334198 514.246460,189.254807 \n     C514.171448,185.110687 514.035645,180.966644 514.031494,176.822449 \n     C514.009827,154.996796 514.017822,133.171097 514.030396,111.345428 \n     C514.031128,110.020592 514.332153,108.676956 514.188965,107.375580 \n     C513.988342,105.553322 513.501526,103.762573 512.687256,101.192650 \n     C504.273651,101.128967 495.859711,101.003311 487.446625,101.044174 \n     C485.279541,101.054695 483.115021,101.589058 480.169250,102.307648 \n     C480.105438,113.360130 480.073914,124.412994 479.939453,135.464615 \n     C479.921417,136.948792 479.384552,138.426651 478.950104,139.412354 \n     C478.663208,139.243103 478.376282,139.073853 477.951050,138.410187 \n     C477.664246,138.241257 477.377411,138.072327 476.951202,137.409485 \n     C476.664459,137.240692 476.377686,137.071899 475.951172,136.409393 \n     C475.664490,136.240555 475.377808,136.071732 474.950928,135.409531 \n     C474.664459,135.240509 474.377991,135.071487 473.950409,134.409790 \n     C473.664337,134.240463 473.378265,134.071152 472.951752,133.408722 \n     C472.665527,133.239349 472.379333,133.069977 471.952423,132.410110 \n   M70.974709,257.029327 \n     C70.974709,257.029327 70.889816,257.068329 71.140343,257.679169 \n     C72.071869,258.157440 73.003395,258.635712 73.974846,259.029327 \n     C73.974846,259.029327 73.889824,259.068481 74.173645,259.717438 \n     C78.093880,261.849854 82.014114,263.982239 85.974678,266.029755 \n     C85.974678,266.029755 85.889351,266.069183 86.205917,266.728302 \n     C90.294785,268.509949 94.320488,270.457703 98.484627,272.041412 \n     C109.925110,276.392487 121.552895,280.000275 134.720184,280.007050 \n     C135.461502,280.047882 136.202805,280.088684 137.397949,280.875458 \n     C143.618790,280.625031 149.839630,280.374603 156.848114,280.028992 \n     C157.900513,279.968811 158.952896,279.908630 160.883942,279.990631 \n     C164.922958,279.500885 169.107391,279.522156 172.972763,278.422211 \n     C183.124557,275.533356 193.626236,273.183899 203.071289,268.691223 \n     C212.981552,263.977234 221.825714,257.021942 231.601700,250.939713 \n     C231.904205,250.757065 232.052322,250.489090 232.741989,250.008591 \n     C238.206223,244.354172 243.670456,238.699753 249.711121,232.853516 \n     C250.489426,231.947327 251.267731,231.041153 252.686844,229.852875 \n     C253.835815,227.916885 254.984772,225.980896 256.599976,223.940201 \n     C256.902954,223.758148 257.051239,223.490417 257.553070,222.950516 \n     C257.651184,222.641312 257.749268,222.332108 258.008759,221.591232 \n     C258.008759,221.591232 258.044769,221.131775 258.658508,220.874893 \n     C259.143066,219.937820 259.627625,219.000748 260.028168,218.024170 \n     C260.028168,218.024170 260.067017,218.108459 260.677826,217.858047 \n     C261.156036,216.926666 261.634247,215.995300 262.028412,215.024384 \n     C262.028412,215.024384 262.067230,215.108795 262.717346,214.825455 \n     C263.849152,212.571732 264.980957,210.318008 266.028473,208.024536 \n     C266.028473,208.024536 266.067535,208.109146 266.739716,207.804352 \n     C268.612579,203.601334 271.007660,199.546707 272.252594,195.165283 \n     C275.084930,185.197037 277.352448,175.068314 280.008545,164.226501 \n     C280.048248,163.169373 280.087982,162.112244 280.874298,160.601318 \n     C280.917023,152.208847 281.020569,143.815933 280.960846,135.424179 \n     C280.945465,133.260849 280.416840,131.101151 280.029266,128.203781 \n     C279.969147,127.467522 279.909058,126.731262 279.990570,125.161118 \n     C276.091583,112.683159 273.129852,99.801498 267.986084,87.859703 \n     C264.127289,78.900993 257.462311,71.151009 251.940216,62.397636 \n     C251.757889,62.095608 251.490341,61.947544 251.009827,61.257473 \n     C246.388474,56.384453 242.007034,51.249916 237.070236,46.720741 \n     C233.083481,43.063160 228.426987,40.135593 224.026596,36.969994 \n     C224.026596,36.969994 224.112671,36.929527 223.832306,36.286873 \n     C218.910187,33.486141 213.988083,30.685408 209.025970,27.969709 \n     C209.025970,27.969709 209.111404,27.930584 208.806747,27.259836 \n     C205.531128,25.661377 202.337463,23.859587 198.965347,22.500572 \n     C186.137222,17.330647 173.138245,12.789660 158.366470,12.991586 \n     C157.929535,12.951360 157.492615,12.911134 156.601974,12.124882 \n     C150.381210,12.374907 144.160446,12.624932 137.151993,12.970353 \n     C136.099518,13.030878 135.047043,13.091403 133.106018,13.010202 \n     C128.896545,13.410154 124.583969,13.358274 120.496094,14.291105 \n     C105.659744,17.676680 91.178810,22.255526 78.217613,30.450254 \n     C71.726318,34.554379 65.786964,39.531471 59.278931,44.267849 \n     C59.278931,44.267849 59.119602,44.584320 58.577084,44.929260 \n     C57.758774,45.411434 56.822857,45.765762 56.139385,46.394512 \n     C39.973427,61.266125 27.695744,78.872528 20.286852,99.549072 \n     C16.322762,110.611961 12.868026,121.964890 12.992410,134.851837 \n     C12.952054,136.882721 12.911698,138.913605 12.129004,141.391891 \n     C12.378066,145.947845 12.627127,150.503799 12.972018,155.710510 \n     C13.032093,156.142319 13.092168,156.574127 13.010508,157.910355 \n     C13.339658,161.970688 13.053625,166.201080 14.119768,170.057678 \n     C16.732424,179.508560 19.968964,188.786957 22.979626,198.767960 \n     C23.037445,199.183548 23.095264,199.599152 23.065935,200.545837 \n     C23.357361,200.736588 23.648787,200.927338 23.969177,201.035553 \n     C23.969177,201.035553 23.886938,201.065384 23.996397,201.804260 \n     C26.308815,205.905563 28.621233,210.006851 30.973005,214.023972 \n     C30.973005,214.023972 30.889078,214.063889 30.996881,214.792145 \n     C33.308502,218.231644 35.620121,221.671143 37.971977,225.025406 \n     C37.971977,225.025406 37.886986,225.066162 37.993782,225.771896 \n     C40.033985,228.315216 42.074192,230.858536 44.270733,233.726196 \n     C44.270733,233.726196 44.594456,233.883774 44.903690,234.337646 \n     C45.580269,234.928040 46.256844,235.518433 46.973431,236.024490 \n     C46.973431,236.024490 46.889145,236.064606 46.994011,236.761734 \n     C50.307777,239.878433 53.621540,242.995132 56.975628,246.027344 \n     C56.975628,246.027344 56.891014,246.067398 57.151619,246.690430 \n     C59.412758,248.497711 61.673897,250.304993 63.975395,252.027710 \n     C63.975395,252.027710 63.890640,252.067703 64.148186,252.687317 \n     C65.410248,253.496017 66.672302,254.304733 67.974861,255.028580 \n     C67.974861,255.028580 67.889709,255.068451 68.140816,255.679047 \n     C69.072227,256.157349 70.003639,256.635620 70.974709,257.029327 \n   M832.049866,110.993515 \n     C832.049866,110.993515 832.091919,110.924408 831.837463,110.267471 \n     C829.568787,109.218269 827.300110,108.169075 824.348267,106.808350 \n     C820.856567,105.530937 817.364807,104.253525 813.671387,102.154099 \n     C810.306274,101.754822 806.945557,101.062508 803.575134,101.011253 \n     C793.512634,100.858238 783.444885,100.874107 773.382996,101.045601 \n     C771.875122,101.071304 770.387573,102.285965 768.133728,103.389763 \n     C768.089600,131.156784 768.036682,158.923798 768.042603,186.690796 \n     C768.042786,187.551483 768.652954,188.412018 768.897034,189.641327 \n     C768.897034,189.641327 769.078735,189.972366 769.345032,190.819794 \n     C779.599426,190.878632 789.853882,190.955658 800.108276,190.954620 \n     C800.779541,190.954559 801.450806,190.356750 802.888916,189.614960 \n     C802.888916,181.531342 802.888916,173.447723 802.888916,165.172195 \n     C806.557068,164.757080 809.852051,164.788116 812.909180,163.950851 \n     C818.588196,162.395477 825.114136,162.602264 829.729309,156.818008 \n     C834.098511,153.113464 837.444092,148.706818 839.818420,142.702972 \n     C840.145325,140.994019 840.652283,139.297287 840.769165,137.574097 \n     C841.413818,128.072205 840.236450,119.083748 833.004395,111.955994 \n     C833.004395,111.955994 833.086426,111.960060 832.957581,111.428856 \n     C832.651489,111.257011 832.345459,111.085167 832.049866,110.993515 \n   M744.027405,150.186020 \n     C741.399658,145.108093 738.771973,140.030167 736.022095,134.210693 \n     C730.675049,123.311104 725.430725,112.358284 719.846313,101.581680 \n     C719.175293,100.286797 716.659729,99.947708 714.281555,99.176407 \n     C712.462524,103.114891 710.643433,107.053368 708.168518,111.292534 \n     C706.109131,116.146820 704.049744,121.001099 701.464294,126.049370 \n     C701.279968,126.360710 701.095703,126.672050 700.981384,126.929405 \n     C700.981384,126.929405 700.921692,126.864189 700.265503,127.157425 \n     C694.577148,138.744934 688.888733,150.332443 682.863037,162.563568 \n     C679.564148,169.013809 676.223938,175.443451 672.988892,181.925522 \n     C671.860901,184.185684 670.992065,186.575211 669.238892,189.259567 \n     C669.884583,189.839813 670.528870,190.925797 671.176147,190.927612 \n     C700.959656,191.011200 730.743591,191.015030 760.527039,190.917725 \n     C761.304993,190.915192 762.078918,189.689453 763.003174,188.294205 \n     C760.958984,184.191391 758.914795,180.088593 757.005371,175.239365 \n     C756.682312,174.518661 756.402100,173.775009 756.029724,173.080780 \n     C752.055664,165.671860 748.067017,158.270767 744.101746,150.959305 \n     C744.101746,150.959305 744.185364,150.916733 744.027405,150.186020 \n   M585.702881,150.014664 \n     C586.137573,149.959625 586.572327,149.904587 587.859924,149.985962 \n     C588.391113,147.484497 588.922302,144.983032 589.666992,141.475906 \n     C579.257385,141.475906 569.825745,141.475906 560.213135,141.475906 \n     C560.213135,138.869736 560.213135,137.143707 560.213135,135.017792 \n     C570.611755,135.017792 580.846863,135.091232 591.078369,134.930420 \n     C592.450012,134.908859 593.803040,133.704300 595.878479,132.676254 \n     C595.829834,124.057671 595.866516,115.437027 595.658325,106.822296 \n     C595.618164,105.162979 594.617981,103.526863 593.607178,101.132072 \n     C572.235840,101.088669 550.864502,101.035080 529.493164,101.039467 \n     C528.645569,101.039642 527.798157,101.591576 526.242737,102.217636 \n     C526.162476,105.302437 526.015076,108.387184 526.012634,111.472046 \n     C525.993042,136.003632 525.982727,160.535263 526.041077,185.066727 \n     C526.045044,186.729141 526.629822,188.390198 527.350037,190.833984 \n     C549.237793,190.888580 571.125549,190.951233 593.013306,190.955948 \n     C593.624939,190.956070 594.236633,190.336075 595.222412,189.275742 \n     C595.494934,188.715714 596.001648,188.157059 596.004883,187.595459 \n     C596.056763,178.698959 596.108093,169.801010 595.958496,160.906784 \n     C595.941345,159.888611 594.718323,158.890717 593.605774,157.132889 \n     C582.438904,157.132889 571.271973,157.132889 560.041626,157.132889 \n     C560.041626,154.726013 560.041626,152.918945 560.968445,151.006790 \n     C564.729309,151.004730 568.494690,151.117096 572.249939,150.970428 \n     C576.520996,150.803589 580.783081,150.405334 585.702881,150.014664 \n   M626.338806,190.865280 \n     C637.211365,190.865280 648.083862,190.865280 659.283386,190.865280 \n     C659.283386,171.957230 659.283386,153.593735 659.283386,135.034027 \n     C661.762573,135.034027 663.908081,135.124649 666.043335,135.015472 \n     C670.712524,134.776688 675.376404,134.436462 680.807678,133.687378 \n     C680.870911,124.360527 680.917542,115.033516 681.006042,105.706909 \n     C681.037842,102.351097 679.349609,100.979950 676.102905,100.983849 \n     C652.770752,101.011848 629.438599,101.021561 606.106567,100.977432 \n     C602.604126,100.970810 600.923950,102.412949 600.977417,105.997856 \n     C601.061890,111.662971 600.891724,117.333061 601.038025,122.995651 \n     C601.133240,126.681847 601.598755,130.358475 602.320068,134.819000 \n     C609.865662,134.819000 617.411316,134.819000 625.001099,134.819000 \n     C625.001099,152.343948 624.977234,168.950775 625.041382,185.557266 \n     C625.047241,187.067383 625.618408,188.575333 626.338806,190.865280 \n   z\"\n      />\n      <path\n        fill=\"#F5F6EA\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M133.994568,13.151928 \n     C135.047043,13.091403 136.099518,13.030878 137.827789,13.241203 \n     C144.687607,13.298339 150.871643,13.084623 157.055679,12.870909 \n     C157.492615,12.911134 157.929535,12.951360 158.778229,13.441142 \n     C164.125870,14.762455 169.206070,15.159674 173.966751,16.607519 \n     C183.089844,19.382078 192.015060,22.802031 201.058548,25.846804 \n     C203.679581,26.729258 206.423706,27.246120 209.111404,27.930584 \n     C209.111404,27.930584 209.025970,27.969709 209.070892,28.279661 \n     C214.114761,31.369583 219.113724,34.149551 224.112671,36.929523 \n     C224.112671,36.929527 224.026596,36.969994 224.056473,37.281616 \n     C232.776520,45.686352 241.464066,53.782280 250.174149,61.853893 \n     C250.363464,62.029335 250.810684,61.926479 251.137604,61.953438 \n     C251.490341,61.947544 251.757889,62.095608 251.978638,63.022652 \n     C252.668243,65.255165 253.095215,67.005180 254.010300,68.444946 \n     C257.539612,73.997879 262.272125,79.039024 264.632446,85.028969 \n     C269.434143,97.214561 272.941772,109.907463 277.117828,122.345955 \n     C277.577026,123.713768 278.917297,124.785797 279.848969,125.995010 \n     C279.909058,126.731262 279.969147,127.467522 279.758270,128.854187 \n     C279.354095,139.489410 279.204773,149.474106 279.132996,159.459351 \n     C279.129181,159.988861 279.781067,160.523087 280.127686,161.055115 \n     C280.087982,162.112244 280.048248,163.169373 279.569519,164.698578 \n     C278.687347,166.166168 278.123962,167.126373 277.819641,168.162659 \n     C274.866638,178.218414 271.966980,188.289810 269.029388,198.350113 \n     C268.076538,201.613174 267.056702,204.856689 266.067535,208.109146 \n     C266.067535,208.109146 266.028473,208.024536 265.712402,208.072601 \n     C264.286652,210.450043 263.176941,212.779419 262.067230,215.108795 \n     C262.067230,215.108795 262.028412,215.024384 261.709290,215.076813 \n     C260.949127,216.122314 260.508087,217.115387 260.067017,218.108459 \n     C260.067017,218.108459 260.028168,218.024170 259.707397,218.077606 \n     C258.939331,219.131302 258.492065,220.131546 258.044769,221.131775 \n     C258.044769,221.131775 258.008759,221.591232 257.731506,221.940430 \n     C257.239014,222.534027 257.102539,222.816483 257.044800,223.136993 \n     C257.051239,223.490417 256.902954,223.758148 255.993378,224.014053 \n     C254.273209,226.103592 253.159622,228.119278 252.046036,230.134964 \n     C251.267731,231.041153 250.489426,231.947327 249.069229,232.964386 \n     C244.928909,236.240356 241.286346,239.263550 237.982376,242.620056 \n     C235.756119,244.881699 234.008026,247.614014 232.046036,250.135788 \n     C232.052322,250.489090 231.904205,250.757065 230.991577,250.982147 \n     C228.253036,252.183350 225.998291,253.159378 224.016068,254.529663 \n     C207.405426,266.012207 189.309235,273.803253 169.306427,277.083527 \n     C166.140060,277.602753 163.102432,278.907104 160.005295,279.848450 \n     C158.952896,279.908630 157.900513,279.968811 156.172012,279.758423 \n     C149.311981,279.701721 143.128052,279.915619 136.944122,280.129517 \n     C136.202805,280.088684 135.461502,280.047882 134.259949,279.551819 \n     C133.441986,278.778168 133.095062,278.194519 132.724991,278.179474 \n     C117.683235,277.566681 104.001854,271.980347 90.228004,266.690216 \n     C88.898407,266.179565 87.341011,266.262024 85.889351,266.069183 \n     C85.889351,266.069183 85.974678,266.029755 85.928749,265.719299 \n     C81.885155,263.295410 77.887489,261.181946 73.889832,259.068481 \n     C73.889824,259.068481 73.974846,259.029327 73.923187,258.710022 \n     C72.877632,257.949951 71.883728,257.509125 70.889816,257.068329 \n     C70.889816,257.068329 70.974709,257.029327 70.922775,256.710144 \n     C69.877129,255.950104 68.883415,255.509277 67.889709,255.068451 \n     C67.889709,255.068451 67.974861,255.028580 67.938156,254.700775 \n     C66.564514,253.604553 65.227577,252.836121 63.890640,252.067703 \n     C63.890640,252.067703 63.975395,252.027710 63.944176,251.712769 \n     C61.572311,249.621017 59.231663,247.844208 56.891014,246.067398 \n     C56.891014,246.067398 56.975628,246.027344 56.945290,245.717224 \n     C53.573013,242.292938 50.231079,239.178772 46.889145,236.064606 \n     C46.889145,236.064606 46.973431,236.024490 46.963867,235.674942 \n     C46.167690,234.844849 45.381073,234.364319 44.594456,233.883774 \n     C44.594456,233.883774 44.270733,233.726196 44.402573,233.249146 \n     C42.318604,230.203430 40.102798,227.634796 37.886990,225.066162 \n     C37.886986,225.066162 37.971977,225.025406 37.969086,224.687408 \n     C35.607155,220.920898 33.248116,217.492401 30.889080,214.063889 \n     C30.889078,214.063889 30.973005,214.023972 30.968513,213.676071 \n     C28.604994,209.240570 26.245966,205.152985 23.886938,201.065384 \n     C23.886938,201.065384 23.969177,201.035553 23.885370,200.852386 \n     C23.669882,200.367386 23.453722,200.149216 23.153084,200.014740 \n     C23.095264,199.599152 23.037445,199.183548 22.981846,198.031998 \n     C22.727839,195.691666 22.586275,194.058807 22.196199,192.487671 \n     C20.147604,184.236435 18.042379,175.999222 15.943646,167.760483 \n     C15.029390,164.171494 14.083670,160.590546 13.152241,157.005936 \n     C13.092168,156.574127 13.032093,156.142319 13.240655,155.105103 \n     C13.296642,149.981293 13.083993,145.462891 12.871344,140.944489 \n     C12.911698,138.913605 12.952054,136.882721 13.447139,134.326050 \n     C15.259642,127.275322 16.323055,120.672432 18.026806,114.239120 \n     C24.924158,88.194893 37.657402,65.630791 58.196545,47.785519 \n     C58.900177,47.174171 58.829418,45.671528 59.119606,44.584320 \n     C59.119602,44.584320 59.278931,44.267849 59.752918,44.400639 \n     C60.712162,44.527779 61.313831,44.708744 61.665688,44.489250 \n     C70.917252,38.717953 79.859161,32.375221 89.448479,27.240337 \n     C100.242439,21.460388 111.896179,17.698362 124.132393,15.923206 \n     C127.483276,15.437079 130.710571,14.099031 133.994568,13.151928 \n   M146.604111,97.250732 \n     C144.194397,94.365753 141.812057,91.457336 139.368362,88.601440 \n     C135.954758,84.612038 131.667343,81.100578 129.272049,76.580139 \n     C126.484276,71.319023 120.779274,67.105392 114.972740,68.597244 \n     C101.881943,71.960632 90.932045,79.272659 81.423866,88.488518 \n     C69.391510,100.150932 62.456856,114.241600 65.204926,131.526428 \n     C65.764168,135.043930 67.588196,139.080261 70.159805,141.406357 \n     C75.331436,146.084213 80.007294,151.530472 88.753906,150.803833 \n     C95.186859,150.269394 100.572350,149.658112 104.360718,144.048813 \n     C106.121735,144.233170 108.342003,145.197556 109.569115,144.475082 \n     C117.441734,139.840012 125.089104,134.823135 132.827133,129.958206 \n     C135.398636,128.341492 138.609360,127.317276 140.511063,125.135803 \n     C147.324295,117.320244 150.436996,108.373451 146.604111,97.250732 \n   M195.339172,117.116493 \n     C196.909744,115.229286 198.912033,113.552719 199.957733,111.409431 \n     C201.915390,107.396980 202.793732,102.783997 205.135849,99.058853 \n     C206.716003,96.545609 209.776718,94.310539 212.636017,93.402901 \n     C217.252533,91.937454 222.241974,91.623123 227.085861,90.902908 \n     C235.977234,89.580879 244.877274,88.317291 253.707382,87.038948 \n     C253.439484,82.769585 253.946686,79.154175 252.849030,76.119186 \n     C251.228607,71.638832 243.045685,68.350296 237.878067,69.289787 \n     C232.810501,70.211098 227.749161,71.167671 222.691010,72.139603 \n     C215.335495,73.552994 215.337769,73.564789 211.881714,66.708946 \n     C208.874954,60.744370 205.580704,60.289341 201.080963,65.353325 \n     C199.883102,66.701393 198.930420,68.312759 198.082962,69.918198 \n     C195.558731,74.700027 191.717255,77.675140 186.308746,77.990891 \n     C178.855362,78.426041 171.367874,78.857658 163.921097,78.583031 \n     C160.139114,78.443565 158.815033,80.002312 159.045685,83.022202 \n     C159.294739,86.283348 160.194092,89.528191 161.099533,92.697350 \n     C162.212234,96.591896 164.458069,98.186607 168.956100,97.346382 \n     C173.773026,96.446587 178.816269,96.758217 184.817429,96.494720 \n     C183.523132,99.570290 182.842651,101.050613 182.269455,102.571388 \n     C178.400742,112.835693 173.540680,122.877930 171.130173,133.476196 \n     C169.928787,138.758316 172.714905,145.258057 174.818314,150.779999 \n     C175.401794,152.311691 179.983383,152.692917 182.761459,152.799515 \n     C183.647385,152.833496 184.941589,150.393585 185.512299,148.882889 \n     C186.980637,144.996155 188.357544,141.047379 189.348999,137.019531 \n     C189.850052,134.983978 189.436554,132.723312 189.436554,129.825302 \n     C194.027802,128.764679 194.302811,124.449730 193.878632,119.709114 \n     C193.811859,118.962677 194.317612,118.165009 195.339172,117.116493 \n   M82.672928,224.979584 \n     C79.599785,228.455017 76.353821,231.798035 73.539085,235.471466 \n     C72.422897,236.928177 72.263885,239.118317 71.669067,240.974518 \n     C73.381348,240.182770 75.292709,239.647110 76.743690,238.519226 \n     C77.929558,237.597382 78.566025,235.968781 79.446083,234.653549 \n     C79.857079,234.986115 80.268074,235.318680 80.679070,235.651260 \n     C80.190788,238.554855 79.520767,241.445312 79.309227,244.368942 \n     C79.231377,245.444809 79.985207,246.924057 80.846382,247.589066 \n     C81.322289,247.956573 83.158401,247.327377 83.776970,246.619400 \n     C87.370956,242.505981 90.851723,238.286896 94.189056,233.963303 \n     C94.688652,233.316086 94.231224,231.930161 94.216522,230.885956 \n     C93.099930,231.143707 91.682518,231.060699 90.927101,231.727585 \n     C89.157005,233.290176 87.704025,235.212021 86.122665,236.988419 \n     C85.785240,233.832672 86.464935,231.165207 86.842857,228.455643 \n     C87.200394,225.892258 87.002701,223.504242 82.672928,224.979584 \n   M182.380417,238.284576 \n     C182.804443,241.601440 183.228470,244.918289 183.816071,249.514694 \n     C181.122086,246.454620 179.310745,244.120590 177.188690,242.115341 \n     C176.269180,241.246414 174.709274,241.055191 173.440247,240.556152 \n     C173.008942,241.881439 171.996002,243.330612 172.247330,244.510498 \n     C173.318634,249.540100 174.662033,254.521042 176.159851,259.442535 \n     C176.453156,260.406311 177.872787,261.027283 178.772919,261.806366 \n     C179.202148,260.830963 180.007614,259.847198 179.986145,258.881805 \n     C179.933456,256.512726 179.499680,254.152100 179.102631,250.805496 \n     C181.825409,253.382019 183.755615,255.418381 185.924255,257.157410 \n     C186.791748,257.853058 188.798935,258.511719 189.210144,258.103119 \n     C190.058594,257.260071 190.785568,255.532196 190.502701,254.443741 \n     C189.206970,249.457825 187.658600,244.526199 185.912415,239.679001 \n     C185.590195,238.784561 183.936066,238.369949 182.380417,238.284576 \n   M130.184143,243.998337 \n     C121.183319,243.926926 115.338135,251.828598 118.410759,260.252441 \n     C119.018967,261.919891 120.651459,263.681274 122.261925,264.427551 \n     C127.011986,266.628784 133.213943,263.727692 135.487915,258.648132 \n     C138.394577,252.155289 136.745529,246.803116 130.184143,243.998337 \n   M243.596252,166.251190 \n     C248.526062,166.828201 253.448807,167.487579 258.391754,167.911224 \n     C259.355682,167.993835 260.482635,167.278702 261.342529,166.663422 \n     C261.547943,166.516434 261.063843,164.695206 260.760986,164.654480 \n     C255.721680,163.976883 255.424957,159.849670 253.789322,156.262863 \n     C252.888718,154.287903 249.449539,152.145294 247.333847,152.314606 \n     C242.314819,152.716263 240.481155,157.138000 239.915146,161.522659 \n     C239.740021,162.879272 241.788940,164.522980 243.596252,166.251190 \n   M255.333328,182.866409 \n     C256.221313,182.151199 257.109283,181.436005 257.997253,180.720795 \n     C257.165527,180.055557 256.412811,178.968384 255.488922,178.795334 \n     C250.473022,177.855911 245.426361,177.050949 240.363373,176.413361 \n     C239.057999,176.248978 237.655609,176.854935 236.297775,177.107025 \n     C236.844818,178.531509 236.995026,180.406067 238.009430,181.300461 \n     C241.845978,184.683182 245.890335,187.847214 250.023056,190.865646 \n     C251.135681,191.678268 252.835602,191.686798 254.265930,192.064438 \n     C253.742401,190.606857 253.497589,188.953384 252.638824,187.731415 \n     C250.696640,184.967865 249.674896,182.874283 255.333328,182.866409 \n   M28.214132,162.622894 \n     C28.505577,163.003830 28.873188,163.754257 29.077417,163.712143 \n     C35.652565,162.356735 42.223148,160.969635 48.733036,159.341827 \n     C48.995735,159.276123 49.008995,155.795609 48.554066,155.642502 \n     C42.462425,153.592224 36.281593,151.796097 30.074606,150.115311 \n     C29.415310,149.936798 28.253475,150.722580 27.713284,151.380142 \n     C27.451820,151.698441 27.872311,153.010452 28.362774,153.434769 \n     C30.100590,154.938110 32.001682,156.252731 33.840900,157.638870 \n     C31.978476,159.047241 30.116051,160.455612 28.214132,162.622894 \n   M221.981964,228.531158 \n     C218.879059,226.074005 215.838608,223.530701 212.637161,221.209442 \n     C211.607758,220.463074 210.153824,220.302185 208.894119,219.873459 \n     C208.683823,221.279648 207.945114,222.867233 208.354767,224.060608 \n     C210.125504,229.219086 212.126480,234.308228 214.302048,239.310226 \n     C214.761627,240.366898 216.307968,240.950897 217.353577,241.752686 \n     C217.689209,240.469681 218.122345,239.202591 218.334930,237.899506 \n     C218.582230,236.383667 218.636353,234.836319 218.774292,233.302643 \n     C220.124573,233.629181 221.460251,234.097321 222.829636,234.238358 \n     C223.966431,234.355453 225.142868,234.087509 226.301743,233.990143 \n     C225.977936,232.998474 225.864716,231.850098 225.274384,231.056732 \n     C224.609589,230.163254 223.514877,229.589645 221.981964,228.531158 \n   M99.638893,251.973831 \n     C100.529831,251.705795 101.404755,251.323853 102.315369,251.195801 \n     C103.769104,250.991409 105.246567,250.955765 106.713997,250.848755 \n     C105.986443,249.675110 105.053474,248.576736 104.588089,247.307007 \n     C104.105972,245.991608 103.468590,244.150742 104.026703,243.205475 \n     C104.551193,242.317139 106.550850,241.962204 107.895370,241.975769 \n     C109.848267,241.995453 111.795708,242.556885 113.745468,242.887283 \n     C113.911247,242.249405 114.077019,241.611542 114.242798,240.973663 \n     C112.597801,240.036255 111.004066,238.990952 109.298683,238.180649 \n     C102.899559,235.140182 102.888702,235.170334 99.712662,241.592743 \n     C98.235817,244.579117 96.646889,247.515335 95.303398,250.560150 \n     C94.638939,252.066086 94.415596,253.766663 93.992661,255.379166 \n     C94.468765,255.685471 94.944878,255.991776 95.420990,256.298065 \n     C96.684227,255.065674 97.947472,253.833282 99.638893,251.973831 \n   M246.432297,201.003998 \n     C244.304947,199.712570 242.292755,198.145645 240.022293,197.196564 \n     C236.896042,195.889771 235.553268,194.111221 236.857071,190.745712 \n     C237.010406,190.349899 236.394882,189.656250 236.139496,189.108643 \n     C231.350342,191.137634 227.472504,199.062119 229.473816,203.214523 \n     C234.302841,197.488373 238.426727,201.550186 242.699005,204.093765 \n     C243.268692,204.432938 243.801712,205.001053 244.403671,205.083389 \n     C245.609848,205.248398 246.851974,205.150665 248.079269,205.161407 \n     C247.711777,203.929916 247.344284,202.698425 246.432297,201.003998 \n   M38.237797,198.238663 \n     C38.823692,199.432877 39.176628,200.847336 40.049324,201.770386 \n     C41.404629,203.203918 43.113777,204.302887 44.672935,205.543671 \n     C44.488098,203.671921 44.296604,201.800766 44.124802,199.927826 \n     C44.095329,199.606537 44.149765,199.277542 44.196442,198.308426 \n     C47.578114,196.950760 51.299194,195.645920 54.830986,193.947495 \n     C56.280758,193.250320 57.322311,191.704285 58.549561,190.544388 \n     C56.772560,190.344925 54.881927,189.662689 53.242695,190.048523 \n     C50.028336,190.805130 46.841511,191.920700 43.860016,193.342255 \n     C41.760590,194.343246 40.018967,196.094666 38.237797,198.238663 \n   M49.163467,171.397644 \n     C44.781799,172.119461 40.331680,172.576981 36.050297,173.685928 \n     C34.193394,174.166916 31.246422,176.043167 31.289335,177.192505 \n     C31.412527,180.491989 31.702665,184.414673 36.860516,186.225723 \n     C36.668324,183.246643 36.521076,180.964172 36.340946,178.172012 \n     C40.548492,177.447723 44.756126,176.821213 48.912266,175.949249 \n     C50.185089,175.682220 51.316654,174.741898 52.512909,174.109894 \n     C51.637871,173.264984 50.762833,172.420059 49.163467,171.397644 \n   M166.073395,262.078644 \n     C165.516479,256.661011 165.085403,251.224808 164.292435,245.841934 \n     C164.140778,244.812500 162.563065,243.993149 161.643280,243.076859 \n     C161.107925,244.149506 160.030838,245.273727 160.127228,246.286255 \n     C160.658539,251.867828 161.181259,257.484009 162.328430,262.958038 \n     C162.851715,265.455078 164.790146,266.333252 166.073395,262.078644 \n   M64.851738,229.588211 \n     C68.711174,226.171219 72.616371,222.803421 76.388893,219.293030 \n     C77.088547,218.641983 77.253517,217.416321 77.665268,216.455856 \n     C76.673042,216.088898 75.298836,215.106842 74.747215,215.449402 \n     C68.727982,219.187347 63.740677,224.006241 59.722656,229.740250 \n     C59.955212,230.159653 60.187767,230.579041 60.420322,230.998444 \n     C61.711777,230.693832 63.003231,230.389206 64.851738,229.588211 \n   z\"\n      />\n      <path\n        fill=\"#87B1BC\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M395.049164,190.816620 \n     C388.650726,191.217575 382.252258,191.618530 375.283020,191.567734 \n     C370.442230,190.101822 366.172272,189.087677 361.902313,188.073532 \n     C361.902313,188.073532 361.969727,188.122986 362.002441,187.786621 \n     C359.650116,186.325790 357.265106,185.201324 354.880066,184.076859 \n     C354.880066,184.076859 354.965607,184.091217 354.979065,183.751862 \n     C353.958252,182.969925 352.923950,182.527344 351.889648,182.084747 \n     C351.889648,182.084747 351.927216,182.019150 351.952148,181.741455 \n     C351.621582,181.322601 351.266052,181.181458 350.910553,181.040298 \n     C350.910553,181.040298 350.982788,181.015915 350.975891,180.742493 \n     C350.615662,180.325409 350.262329,180.181763 349.908997,180.038101 \n     C349.908997,180.038101 349.981750,180.017807 349.972351,179.744995 \n     C349.611603,179.327499 349.260315,179.182800 348.908997,179.038086 \n     C348.908997,179.038086 348.981781,179.017853 348.972412,178.745178 \n     C348.611877,178.327744 348.260742,178.182968 347.909576,178.038208 \n     C347.909576,178.038208 347.982361,178.017685 347.974365,177.743317 \n     C347.614777,177.326172 347.263184,177.183380 346.911621,177.040573 \n     C346.911621,177.040573 346.983978,177.015717 346.978882,176.740112 \n     C346.620087,176.323502 346.266418,176.182510 345.912720,176.041504 \n     C345.912720,176.041504 345.983551,176.069962 346.070923,175.719971 \n     C345.381989,174.605606 344.605682,173.841217 343.829407,173.076843 \n     C343.829407,173.076843 343.898804,173.032013 344.011932,172.691971 \n     C343.805481,171.422943 343.600800,170.433517 343.148773,169.574203 \n     C337.827942,159.459534 335.782379,148.821640 337.928558,137.498947 \n     C338.600464,133.954056 339.300720,130.414520 339.987976,126.872551 \n     C339.988007,126.872551 339.979126,126.414520 340.391052,126.158508 \n     C342.178467,123.233078 343.553925,120.563667 344.929382,117.894257 \n     C344.929413,117.894264 344.887543,117.964409 345.214966,118.021393 \n     C347.998718,115.328735 350.455078,112.579086 352.911438,109.829437 \n     C352.911438,109.829430 352.982239,109.896896 353.258362,109.934151 \n     C353.676788,109.618584 353.819031,109.265762 353.961273,108.912933 \n     C353.961273,108.912933 353.962280,108.994728 354.302429,109.078705 \n     C356.071899,108.053696 357.501251,106.944710 358.930603,105.835724 \n     C358.930603,105.835724 358.977417,105.902122 359.332062,106.018967 \n     C371.114288,101.364937 382.921143,100.649544 395.356079,103.029404 \n     C397.587738,103.473503 399.462372,103.721581 401.337036,103.969658 \n     C401.337036,103.969658 401.661957,103.877022 401.795715,104.351883 \n     C403.064941,105.209015 404.200409,105.591278 405.335846,105.973541 \n     C405.335846,105.973549 405.682983,105.879250 405.858765,106.259865 \n     C406.385651,106.745079 406.736786,106.849678 407.087891,106.954277 \n     C407.087891,106.954277 407.019684,106.889252 406.982147,107.238602 \n     C407.997742,108.032570 409.050903,108.477188 410.104034,108.921806 \n     C410.104034,108.921806 410.061707,108.986382 410.043671,109.260071 \n     C410.381195,109.677193 410.736786,109.820633 411.092346,109.964073 \n     C411.092346,109.964073 411.008667,109.908394 411.001099,110.244644 \n     C412.362854,111.359802 413.732208,112.138702 415.101532,112.917603 \n     C415.101532,112.917603 415.002472,112.988594 414.911865,113.304306 \n     C416.272827,115.050903 417.724396,116.481773 419.175934,117.912643 \n     C419.175934,117.912643 419.104156,117.956039 418.983276,118.287506 \n     C419.632660,119.387001 420.402893,120.155029 421.173157,120.923065 \n     C421.173157,120.923058 421.102173,120.968498 420.985168,121.310326 \n     C426.797394,134.290268 428.717072,147.348099 424.739746,161.240448 \n     C423.022095,165.363388 421.551483,169.243271 420.080902,173.123138 \n     C420.080902,173.123138 420.111755,173.040802 419.777924,172.993835 \n     C418.323242,174.671310 417.202393,176.395767 416.081543,178.120239 \n     C416.081512,178.120224 416.022430,178.072906 415.746521,178.052750 \n     C415.326263,178.385513 415.181915,178.738434 415.037567,179.091354 \n     C415.037567,179.091354 415.018127,179.018524 414.745575,179.028870 \n     C414.328217,179.389542 414.183441,179.739838 414.038635,180.090134 \n     C414.038635,180.090134 414.017517,180.017334 413.742767,180.024612 \n     C413.325714,180.383713 413.183411,180.735535 413.041077,181.087341 \n     C413.041077,181.087341 413.068848,181.016068 412.721191,180.931152 \n     C411.276611,181.957275 410.179718,183.068298 409.082794,184.179321 \n     C409.082794,184.179321 409.037323,184.102493 408.708099,183.997864 \n     C407.611389,184.651840 406.843933,185.410446 406.076447,186.169067 \n     C406.076447,186.169067 406.035370,186.093933 405.716187,185.971954 \n     C404.581909,186.551880 403.766785,187.253784 402.951660,187.955688 \n     C402.951660,187.955688 402.659393,188.122223 402.094788,187.973938 \n     C399.369873,188.822647 397.209534,189.819641 395.049164,190.816620 \n   z\"\n      />\n      <path\n        fill=\"#88B1BC\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M769.078735,189.972366 \n     C769.078735,189.972366 768.897034,189.641327 769.154907,189.077148 \n     C769.579590,186.377777 769.884460,184.243073 769.892029,182.107330 \n     C769.985901,155.744370 770.036377,129.381241 770.557983,103.018250 \n     C785.302979,103.004265 799.588074,102.990196 813.873108,102.976120 \n     C817.364807,104.253525 820.856567,105.530937 824.827881,107.271759 \n     C827.568909,108.798248 829.830444,109.861320 832.091919,110.924408 \n     C832.091919,110.924408 832.049866,110.993515 832.033081,111.267151 \n     C832.373047,111.680557 832.729736,111.820312 833.086426,111.960068 \n     C833.086426,111.960060 833.004395,111.955994 832.913330,112.297920 \n     C838.501343,121.755928 840.652771,131.504852 838.184326,142.113754 \n     C838.124207,142.372269 838.783264,142.798126 839.106812,143.145920 \n     C837.444092,148.706818 834.098511,153.113464 829.028442,156.926636 \n     C820.880249,159.022659 813.513428,161.462265 805.952026,162.809540 \n     C802.083862,163.498779 800.962830,164.719177 801.032288,168.420593 \n     C801.166077,175.550186 800.889771,182.687485 800.333862,189.843445 \n     C789.615662,189.901001 779.347168,189.936691 769.078735,189.972366 \n   z\"\n      />\n      <path\n        fill=\"#89B1BC\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M670.004944,188.905670 \n     C670.992065,186.575211 671.860901,184.185684 672.988892,181.925522 \n     C676.223938,175.443451 679.564148,169.013809 683.345642,162.153870 \n     C689.564575,150.605865 695.307495,139.470932 701.008179,128.314438 \n     C701.198120,127.942787 700.960205,127.352547 700.921692,126.864189 \n     C700.921692,126.864189 700.981384,126.929405 701.227539,126.895966 \n     C701.645874,126.526810 701.818115,126.191086 701.990356,125.855370 \n     C704.049744,121.001099 706.109131,116.146820 708.849915,111.077316 \n     C711.395813,107.323959 713.260376,103.785812 715.470093,100.208191 \n     C716.979858,101.648483 718.401550,102.992401 719.266907,104.630249 \n     C724.593445,114.711800 729.794373,124.859711 735.077271,135.344269 \n     C736.778259,139.118225 738.291687,142.616760 740.157532,145.915970 \n     C741.197205,147.754227 742.823425,149.260742 744.185364,150.916748 \n     C744.185364,150.916733 744.101746,150.959305 743.988831,151.294403 \n     C747.648193,159.463501 751.403564,167.305801 755.236572,175.109955 \n     C755.458008,175.560684 756.311340,175.701004 756.870605,175.985779 \n     C758.914795,180.088593 760.958984,184.191391 762.545410,188.801910 \n     C760.963745,189.504471 759.839966,189.868286 758.715820,189.869476 \n     C730.355530,189.899673 701.995300,189.903915 673.635071,189.848877 \n     C672.424438,189.846527 671.214966,189.233963 670.004944,188.905670 \n   z\"\n      />\n      <path\n        fill=\"#F9FFFF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M601.898438,134.039398 \n     C601.598755,130.358475 601.133240,126.681847 601.038025,122.995651 \n     C600.891724,117.333061 601.061890,111.662971 600.977417,105.997856 \n     C600.923950,102.412949 602.604126,100.970810 606.106567,100.977432 \n     C629.438599,101.021561 652.770752,101.011848 676.102905,100.983849 \n     C679.349609,100.979950 681.037842,102.351097 681.006042,105.706909 \n     C680.917542,115.033516 680.870911,124.360527 680.349365,133.679199 \n     C679.727234,133.372620 679.489258,133.155350 679.153809,132.549332 \n     C679.123230,123.610283 679.085144,115.140991 679.129578,106.672119 \n     C679.141418,104.411636 678.811523,102.836502 675.959534,102.842735 \n     C652.710938,102.893600 629.461914,102.824265 606.214478,102.998596 \n     C605.106262,103.006905 603.074158,104.950989 603.059326,106.015717 \n     C602.929932,115.298859 603.162842,124.587067 602.940918,133.916931 \n     C602.362000,133.986542 602.130249,134.012970 601.898438,134.039398 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M435.878204,190.041016 \n     C435.577820,189.361252 435.015717,188.681870 435.014679,188.001633 \n     C434.970917,158.871872 434.977051,129.742020 434.977051,99.156509 \n     C437.720764,100.410378 440.276154,100.891663 441.833893,102.401962 \n     C451.630432,111.900299 461.205170,121.627487 470.956238,131.612274 \n     C471.059265,131.945541 471.015625,131.980652 470.661438,132.086090 \n     C468.720459,131.051620 466.956116,130.093079 465.575989,128.742081 \n     C457.246521,120.588356 449.013428,112.336205 440.722504,104.142876 \n     C439.752441,103.184212 438.625702,102.384125 436.945251,100.991486 \n     C436.945251,114.631393 436.910065,127.276108 436.953979,139.920547 \n     C437.011810,156.566620 437.131836,173.212494 436.889221,189.910492 \n     C436.328308,189.988693 436.103271,190.014847 435.878204,190.041016 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M58.848343,44.756790 \n     C58.829418,45.671528 58.900177,47.174171 58.196545,47.785519 \n     C37.657402,65.630791 24.924158,88.194893 18.026806,114.239120 \n     C16.323055,120.672432 15.259642,127.275322 13.526823,133.897354 \n     C12.868026,121.964890 16.322762,110.611961 20.286852,99.549072 \n     C27.695744,78.872528 39.973427,61.266125 56.139385,46.394512 \n     C56.822857,45.765762 57.758774,45.411434 58.848343,44.756790 \n   z\"\n      />\n      <path\n        fill=\"#FCFFFF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M770.098083,103.018150 \n     C770.036377,129.381241 769.985901,155.744370 769.892029,182.107330 \n     C769.884460,184.243073 769.579590,186.377777 769.195801,188.892792 \n     C768.652954,188.412018 768.042786,187.551483 768.042603,186.690796 \n     C768.036682,158.923798 768.089600,131.156784 768.813477,103.197403 \n     C769.694824,103.009415 769.896484,103.013786 770.098083,103.018150 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M133.550293,13.081066 \n     C130.710571,14.099031 127.483276,15.437079 124.132393,15.923206 \n     C111.896179,17.698362 100.242439,21.460388 89.448479,27.240337 \n     C79.859161,32.375221 70.917252,38.717953 61.665688,44.489250 \n     C61.313831,44.708744 60.712162,44.527779 59.912441,44.323586 \n     C65.786964,39.531471 71.726318,34.554379 78.217613,30.450254 \n     C91.178810,22.255526 105.659744,17.676680 120.496094,14.291105 \n     C124.583969,13.358274 128.896545,13.410154 133.550293,13.081066 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M279.919769,125.578064 \n     C278.917297,124.785797 277.577026,123.713768 277.117828,122.345955 \n     C272.941772,109.907463 269.434143,97.214561 264.632446,85.028969 \n     C262.272125,79.039024 257.539612,73.997879 254.010300,68.444946 \n     C253.095215,67.005180 252.668243,65.255165 252.031860,63.255280 \n     C257.462311,71.151009 264.127289,78.900993 267.986084,87.859703 \n     C273.129852,99.801498 276.091583,112.683159 279.919769,125.578064 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M160.444611,279.919556 \n     C163.102432,278.907104 166.140060,277.602753 169.306427,277.083527 \n     C189.309235,273.803253 207.405426,266.012207 224.016068,254.529663 \n     C225.998291,253.159378 228.253036,252.183350 230.758636,251.035385 \n     C221.825714,257.021942 212.981552,263.977234 203.071289,268.691223 \n     C193.626236,273.183899 183.124557,275.533356 172.972763,278.422211 \n     C169.107391,279.522156 164.922958,279.500885 160.444611,279.919556 \n   z\"\n      />\n      <path\n        fill=\"#F9FFFF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M526.950623,101.886429 \n     C527.798157,101.591576 528.645569,101.039642 529.493164,101.039467 \n     C550.864502,101.035080 572.235840,101.088669 593.805603,101.834396 \n     C593.990112,102.756012 593.976196,102.975296 593.505737,103.090996 \n     C583.454468,102.944153 573.859314,102.832008 564.264832,102.874832 \n     C551.866028,102.930161 539.467773,103.109299 527.042542,102.897697 \n     C526.994080,102.335648 526.972351,102.111038 526.950623,101.886429 \n   z\"\n      />\n      <path\n        fill=\"#DEECF0\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M679.177185,133.019226 \n     C679.489258,133.155350 679.727234,133.372620 679.966797,133.904358 \n     C675.376404,134.436462 670.712524,134.776688 666.043335,135.015472 \n     C663.908081,135.124649 661.762573,135.034027 659.283386,135.034027 \n     C659.283386,153.593735 659.283386,171.957230 659.283386,190.865280 \n     C648.083862,190.865280 637.211365,190.865280 626.128662,190.444351 \n     C625.918457,190.023422 625.970215,189.990250 626.434814,189.905502 \n     C635.365540,189.824600 643.839783,189.609955 652.294556,189.922379 \n     C656.670471,190.084076 658.028442,188.716415 657.956665,184.300354 \n     C657.708557,169.032043 657.990479,153.755386 657.774353,138.486099 \n     C657.714478,134.259720 659.203613,132.946167 663.249512,133.113052 \n     C668.548401,133.331619 673.867065,133.072739 679.177185,133.019226 \n   z\"\n      />\n      <path\n        fill=\"#E9F4F6\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M595.164734,133.047577 \n     C593.803040,133.704300 592.450012,134.908859 591.078369,134.930420 \n     C580.846863,135.091232 570.611755,135.017792 560.213135,135.017792 \n     C560.213135,137.143707 560.213135,138.869736 560.213135,141.475906 \n     C569.825745,141.475906 579.257385,141.475906 589.666992,141.475906 \n     C588.922302,144.983032 588.391113,147.484497 587.421387,149.676804 \n     C586.982849,149.367645 586.935608,148.887390 586.985596,148.457596 \n     C586.942749,146.456543 586.849915,144.885269 586.736938,142.972183 \n     C578.094360,142.972183 569.985413,142.809402 561.888123,143.045120 \n     C558.184875,143.152939 557.948669,141.274689 557.978821,138.441086 \n     C558.008118,135.677734 558.094849,133.660248 561.850281,133.768021 \n     C569.803894,133.996307 577.769592,133.908417 585.728271,133.797043 \n     C588.470276,133.758698 591.205811,133.265396 594.249390,132.997437 \n     C594.757935,133.025833 594.961304,133.036713 595.164734,133.047577 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M208.959076,27.595209 \n     C206.423706,27.246120 203.679581,26.729258 201.058548,25.846804 \n     C192.015060,22.802031 183.089844,19.382078 173.966751,16.607519 \n     C169.206070,15.159674 164.125870,14.762455 159.098022,13.521353 \n     C173.138245,12.789660 186.137222,17.330647 198.965347,22.500572 \n     C202.337463,23.859587 205.531128,25.661377 208.959076,27.595209 \n   z\"\n      />\n      <path\n        fill=\"#D9E9EC\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M513.137085,101.958344 \n     C513.501526,103.762573 513.988342,105.553322 514.188965,107.375580 \n     C514.332153,108.676956 514.031128,110.020592 514.030396,111.345428 \n     C514.017822,133.171097 514.009827,154.996796 514.031494,176.822449 \n     C514.035645,180.966644 514.171448,185.110687 513.749329,189.559875 \n     C513.055664,189.808197 512.859192,189.751465 512.728760,189.258301 \n     C512.822205,161.751953 512.864807,134.682022 512.839417,107.612167 \n     C512.837952,105.997993 512.291443,104.384331 512.139526,102.573624 \n     C512.516235,102.135284 512.801758,101.995796 513.137085,101.958344 \n   z\"\n      />\n      <path\n        fill=\"#DEEBEE\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M800.783569,189.821579 \n     C800.889771,182.687485 801.166077,175.550186 801.032288,168.420593 \n     C800.962830,164.719177 802.083862,163.498779 805.952026,162.809540 \n     C813.513428,161.462265 820.880249,159.022659 828.708496,157.025681 \n     C825.114136,162.602264 818.588196,162.395477 812.909180,163.950851 \n     C809.852051,164.788116 806.557068,164.757080 802.888916,165.172195 \n     C802.888916,173.447723 802.888916,181.531342 802.168091,189.789581 \n     C801.226013,189.916672 801.004822,189.869125 800.783569,189.821579 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M86.047638,266.398743 \n     C87.341011,266.262024 88.898407,266.179565 90.228004,266.690216 \n     C104.001854,271.980347 117.683235,277.566681 132.724991,278.179474 \n     C133.095062,278.194519 133.441986,278.778168 133.896881,279.471619 \n     C121.552895,280.000275 109.925110,276.392487 98.484627,272.041412 \n     C94.320488,270.457703 90.294785,268.509949 86.047638,266.398743 \n   z\"\n      />\n      <path\n        fill=\"#F9FFFF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M669.621948,189.082611 \n     C671.214966,189.233963 672.424438,189.846527 673.635071,189.848877 \n     C701.995300,189.903915 730.355530,189.899673 758.715820,189.869476 \n     C759.839966,189.868286 760.963745,189.504471 762.471191,189.171890 \n     C762.078918,189.689453 761.304993,190.915192 760.527039,190.917725 \n     C730.743591,191.015030 700.959656,191.011200 671.176147,190.927612 \n     C670.528870,190.925797 669.884583,189.839813 669.621948,189.082611 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M526.596680,102.052032 \n     C526.972351,102.111038 526.994080,102.335648 527.062500,103.343689 \n     C527.077698,132.761002 527.046326,161.394882 526.999512,190.041245 \n     C526.984131,190.053726 526.944458,190.051880 526.944458,190.051880 \n     C526.629822,188.390198 526.045044,186.729141 526.041077,185.066727 \n     C525.982727,160.535263 525.993042,136.003632 526.012634,111.472046 \n     C526.015076,108.387184 526.162476,105.302437 526.596680,102.052032 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M339.635986,127.028793 \n     C339.300720,130.414520 338.600464,133.954056 337.928558,137.498947 \n     C335.782379,148.821640 337.827942,159.459534 343.148773,169.574203 \n     C343.600800,170.433517 343.805481,171.422943 344.025696,172.730927 \n     C341.276733,167.233078 337.833618,161.571396 336.167511,155.427811 \n     C333.798187,146.691055 335.014038,137.770233 338.005432,129.192276 \n     C338.259674,128.463226 338.849854,127.851341 339.635986,127.028793 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M266.403625,207.956757 \n     C267.056702,204.856689 268.076538,201.613174 269.029388,198.350113 \n     C271.966980,188.289810 274.866638,178.218414 277.819641,168.162659 \n     C278.123962,167.126373 278.687347,166.166168 279.489990,165.087738 \n     C277.352448,175.068314 275.084930,185.197037 272.252594,195.165283 \n     C271.007660,199.546707 268.612579,203.601334 266.403625,207.956757 \n   z\"\n      />\n      <path\n        fill=\"#F9FFFF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M560.041626,151.111877 \n     C560.041626,152.918945 560.041626,154.726013 560.041626,157.132889 \n     C571.271973,157.132889 582.438904,157.132889 593.801819,157.831787 \n     C593.986084,158.746948 593.974365,158.963196 593.505737,159.078857 \n     C581.508911,158.978271 569.968933,158.978271 557.252747,158.978271 \n     C558.368835,155.032349 559.135132,152.323029 559.938171,149.988098 \n     C559.997192,150.612289 560.019409,150.862091 560.041626,151.111877 \n   z\"\n      />\n      <path\n        fill=\"#DCEBEF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M770.557983,103.018250 \n     C769.896484,103.013786 769.694824,103.009415 769.191895,102.977829 \n     C770.387573,102.285965 771.875122,101.071304 773.382996,101.045601 \n     C783.444885,100.874107 793.512634,100.858238 803.575134,101.011253 \n     C806.945557,101.062508 810.306274,101.754822 813.772217,102.565109 \n     C799.588074,102.990196 785.302979,103.004265 770.557983,103.018250 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M13.081374,157.458145 \n     C14.083670,160.590546 15.029390,164.171494 15.943646,167.760483 \n     C18.042379,175.999222 20.147604,184.236435 22.196199,192.487671 \n     C22.586275,194.058807 22.727839,195.691666 22.969265,197.715393 \n     C19.968964,188.786957 16.732424,179.508560 14.119768,170.057678 \n     C13.053625,166.201080 13.339658,161.970688 13.081374,157.458145 \n   z\"\n      />\n      <path\n        fill=\"#F4FDFE\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M602.109253,134.429199 \n     C602.130249,134.012970 602.362000,133.986542 603.382324,133.903412 \n     C611.396667,133.846725 618.622375,133.846725 625.970215,133.846725 \n     C625.970215,153.177246 625.970215,171.583755 625.970215,189.990250 \n     C625.970215,189.990250 625.918457,190.023422 625.922729,190.053864 \n     C625.618408,188.575333 625.047241,187.067383 625.041382,185.557266 \n     C624.977234,168.950775 625.001099,152.343948 625.001099,134.819000 \n     C617.411316,134.819000 609.865662,134.819000 602.109253,134.429199 \n   z\"\n      />\n      <path\n        fill=\"#F9FFFF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M512.662781,189.694733 \n     C512.859192,189.751465 513.055664,189.808197 513.551208,189.933487 \n     C513.238464,190.334198 512.626587,190.957001 512.015015,190.956665 \n     C486.782928,190.942978 461.550873,190.873322 436.098511,190.425873 \n     C436.103271,190.014847 436.328308,189.988693 437.337524,189.918976 \n     C462.968719,189.815201 487.815735,189.754959 512.662781,189.694733 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M251.073715,61.605453 \n     C250.810684,61.926479 250.363464,62.029335 250.174149,61.853893 \n     C241.464066,53.782280 232.776520,45.686352 224.076981,37.238708 \n     C228.426987,40.135593 233.083481,43.063160 237.070236,46.720741 \n     C242.007034,51.249916 246.388474,56.384453 251.073715,61.605453 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M424.986816,160.997375 \n     C428.717072,147.348099 426.797394,134.290268 420.971069,121.270615 \n     C425.718994,125.931229 426.819763,132.266052 428.139893,138.710693 \n     C429.686340,146.259903 428.017975,153.401093 426.209290,160.846008 \n     C425.370575,161.012314 425.178711,161.004852 424.986816,160.997375 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M735.037109,134.985535 \n     C729.794373,124.859711 724.593445,114.711800 719.266907,104.630249 \n     C718.401550,102.992401 716.979858,101.648483 715.427979,99.938141 \n     C715.026794,99.526909 715.013000,99.346252 714.999146,99.165604 \n     C716.659729,99.947708 719.175293,100.286797 719.846313,101.581680 \n     C725.430725,112.358284 730.675049,123.311104 735.806396,134.590607 \n     C735.406189,134.975525 735.221619,134.980530 735.037109,134.985535 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M700.593628,127.010803 \n     C700.960205,127.352547 701.198120,127.942787 701.008179,128.314438 \n     C695.307495,139.470932 689.564575,150.605865 683.514282,161.832062 \n     C688.888733,150.332443 694.577148,138.744934 700.593628,127.010803 \n   z\"\n      />\n      <path\n        fill=\"#E9F4F6\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M394.999115,102.833374 \n     C382.921143,100.649544 371.114288,101.364937 359.295288,106.036194 \n     C364.474548,103.949593 369.919281,100.973305 375.650085,100.243324 \n     C381.850922,99.453484 388.318787,100.759972 394.842651,101.755051 \n     C395.015137,102.357956 394.999115,102.833374 394.999115,102.833374 \n   z\"\n      />\n      <path\n        fill=\"#F9FFFF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M594.848328,190.005249 \n     C594.236633,190.336075 593.624939,190.956070 593.013306,190.955948 \n     C571.125549,190.951233 549.237793,190.888580 527.147217,190.442932 \n     C526.944458,190.051880 526.984131,190.053726 527.462769,189.969116 \n     C549.856567,189.829010 571.771667,189.773514 593.975220,189.797668 \n     C594.458618,189.919968 594.653503,189.962601 594.848328,190.005249 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M280.500977,160.828217 \n     C279.781067,160.523087 279.129181,159.988861 279.132996,159.459351 \n     C279.204773,149.474106 279.354095,139.489410 279.805634,129.222198 \n     C280.416840,131.101151 280.945465,133.260849 280.960846,135.424179 \n     C281.020569,143.815933 280.917023,152.208847 280.500977,160.828217 \n   z\"\n      />\n      <path\n        fill=\"#F9FFFF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M512.912170,101.575500 \n     C512.801758,101.995796 512.516235,102.135284 511.672119,102.607040 \n     C501.092743,103.026199 491.121826,103.215126 481.100189,103.023773 \n     C481.016083,102.389923 480.982697,102.136353 480.949310,101.882782 \n     C483.115021,101.589058 485.279541,101.054695 487.446625,101.044174 \n     C495.859711,101.003311 504.273651,101.128967 512.912170,101.575500 \n   z\"\n      />\n      <path\n        fill=\"#E9F4F6\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M839.462646,142.924438 \n     C838.783264,142.798126 838.124207,142.372269 838.184326,142.113754 \n     C840.652771,131.504852 838.501343,121.755928 832.947205,112.274750 \n     C840.236450,119.083748 841.413818,128.072205 840.769165,137.574097 \n     C840.652283,139.297287 840.145325,140.994019 839.462646,142.924438 \n   z\"\n      />\n      <path\n        fill=\"#FCFFFF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M560.505005,151.059326 \n     C560.019409,150.862091 559.997192,150.612289 560.306030,149.809845 \n     C568.735352,149.241867 576.833435,149.226532 584.958618,149.435608 \n     C584.985657,149.660034 585.049072,150.107681 585.049072,150.107681 \n     C580.783081,150.405334 576.520996,150.803589 572.249939,150.970428 \n     C568.494690,151.117096 564.729309,151.004730 560.505005,151.059326 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M232.394012,250.072189 \n     C234.008026,247.614014 235.756119,244.881699 237.982376,242.620056 \n     C241.286346,239.263550 244.928909,236.240356 248.781006,233.060303 \n     C243.670456,238.699753 238.206223,244.354172 232.394012,250.072189 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M756.937988,175.612564 \n     C756.311340,175.701004 755.458008,175.560684 755.236572,175.109955 \n     C751.403564,167.305801 747.648193,159.463501 743.979126,151.248520 \n     C748.067017,158.270767 752.055664,165.671860 756.029724,173.080780 \n     C756.402100,173.775009 756.682312,174.518661 756.937988,175.612564 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M480.559265,102.095215 \n     C480.982697,102.136353 481.016083,102.389923 481.135162,103.452774 \n     C481.177765,116.850105 481.134674,129.438171 480.777313,142.031799 \n     C480.254364,142.055786 480.045624,142.074188 479.584106,141.905701 \n     C479.227478,141.140823 479.123596,140.562866 479.034821,139.963806 \n     C479.049927,139.942719 479.087952,139.907440 479.087952,139.907440 \n     C479.384552,138.426651 479.921417,136.948792 479.939453,135.464615 \n     C480.073914,124.412994 480.105438,113.360130 480.559265,102.095215 \n   z\"\n      />\n      <path\n        fill=\"#D9E9EC\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M595.035400,189.640503 \n     C594.653503,189.962601 594.458618,189.919968 594.047852,189.359711 \n     C593.875488,178.954559 593.919006,169.067017 593.962585,159.179459 \n     C593.974365,158.963196 593.986084,158.746948 594.026123,158.207062 \n     C594.718323,158.890717 595.941345,159.888611 595.958496,160.906784 \n     C596.108093,169.801010 596.056763,178.698959 596.004883,187.595459 \n     C596.001648,188.157059 595.494934,188.715714 595.035400,189.640503 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M137.171036,280.502472 \n     C143.128052,279.915619 149.311981,279.701721 155.778198,279.806000 \n     C149.839630,280.374603 143.618790,280.625031 137.171036,280.502472 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M156.828827,12.497895 \n     C150.871643,13.084623 144.687607,13.298339 138.221619,13.193506 \n     C144.160446,12.624932 150.381210,12.374907 156.828827,12.497895 \n   z\"\n      />\n      <path\n        fill=\"#D6E6EA\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M595.521606,132.861908 \n     C594.961304,133.036713 594.757935,133.025833 594.238342,132.530930 \n     C593.935486,122.429474 593.948853,112.812035 593.962219,103.194588 \n     C593.976196,102.975296 593.990112,102.756012 594.032349,102.208389 \n     C594.617981,103.526863 595.618164,105.162979 595.658325,106.822296 \n     C595.866516,115.437027 595.829834,124.057671 595.521606,132.861908 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M223.972488,36.608196 \n     C219.113724,34.149551 214.114761,31.369583 209.090881,28.237144 \n     C213.988083,30.685408 218.910187,33.486141 223.972488,36.608196 \n   z\"\n      />\n      <path\n        fill=\"#F9FFFF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M800.333862,189.843445 \n     C801.004822,189.869125 801.226013,189.916672 801.784668,190.000610 \n     C801.450806,190.356750 800.779541,190.954559 800.108276,190.954620 \n     C789.853882,190.955658 779.599426,190.878632 769.211914,190.396088 \n     C779.347168,189.936691 789.615662,189.901001 800.333862,189.843445 \n   z\"\n      />\n      <path\n        fill=\"#DCEBEF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M735.077332,135.344254 \n     C735.221619,134.980530 735.406189,134.975525 735.867493,134.961380 \n     C738.771973,140.030167 741.399658,145.108093 744.106384,150.551392 \n     C742.823425,149.260742 741.197205,147.754227 740.157532,145.915970 \n     C738.291687,142.616760 736.778259,139.118225 735.077332,135.344254 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M12.500174,141.168182 \n     C13.083993,145.462891 13.296642,149.981293 13.192739,154.779724 \n     C12.627127,150.503799 12.378066,145.947845 12.500174,141.168182 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M46.941574,236.413177 \n     C50.231079,239.178772 53.573013,242.292938 56.925125,245.759460 \n     C53.621540,242.995132 50.307777,239.878433 46.941574,236.413177 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M23.941668,201.434814 \n     C26.245966,205.152985 28.604994,209.240570 30.948837,213.718170 \n     C28.621233,210.006851 26.308815,205.905563 23.941668,201.434814 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M74.031738,259.392944 \n     C77.887489,261.181946 81.885155,263.295410 85.908585,265.761780 \n     C82.014114,263.982239 78.093880,261.849854 74.031738,259.392944 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M30.942982,214.428009 \n     C33.248116,217.492401 35.607155,220.920898 37.948967,224.730026 \n     C35.620121,221.671143 33.308502,218.231644 30.942982,214.428009 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M714.640381,99.171005 \n     C715.013000,99.346252 715.026794,99.526909 715.082764,99.977623 \n     C713.260376,103.785812 711.395813,107.323959 709.177856,110.926971 \n     C710.643433,107.053368 712.462524,103.114891 714.640381,99.171005 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M424.739746,161.240448 \n     C425.178711,161.004852 425.370575,161.012314 425.849915,161.036652 \n     C424.337616,164.980698 422.537781,168.907837 420.409424,172.979065 \n     C421.551483,169.243271 423.022095,165.363388 424.739746,161.240448 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M362.058899,188.420227 \n     C366.172272,189.087677 370.442230,190.101822 374.822266,191.457825 \n     C370.693420,190.788757 366.454468,189.777847 362.058899,188.420227 \n   z\"\n      />\n      <path\n        fill=\"#E9F4F6\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M352.567139,109.900528 \n     C350.455078,112.579086 347.998718,115.328735 345.184570,117.994080 \n     C347.292175,115.263718 349.757507,112.617661 352.567139,109.900528 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M37.940388,225.419037 \n     C40.102798,227.634796 42.318604,230.203430 44.324402,233.086975 \n     C42.074192,230.858536 40.033985,228.315216 37.940388,225.419037 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M57.021317,246.378906 \n     C59.231663,247.844208 61.572311,249.621017 63.924000,251.755051 \n     C61.673897,250.304993 59.412758,248.497711 57.021317,246.378906 \n   z\"\n      />\n      <path\n        fill=\"#E9F4F6\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M344.604675,118.024956 \n     C343.553925,120.563667 342.178467,123.233078 340.465454,125.941879 \n     C341.511993,123.372726 342.895996,120.764191 344.604675,118.024956 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M355.017761,184.404129 \n     C357.265106,185.201324 359.650116,186.325790 361.973083,187.816391 \n     C359.659149,187.032150 357.407288,185.881775 355.017761,184.404129 \n   z\"\n      />\n      <path\n        fill=\"#E9F4F6\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M831.964722,110.595932 \n     C829.830444,109.861320 827.568909,108.798248 825.169434,107.427521 \n     C827.300110,108.169075 829.568787,109.218269 831.964722,110.595932 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M262.392273,214.967133 \n     C263.176941,212.779419 264.286652,210.450043 265.754547,208.092468 \n     C264.980957,210.318008 263.849152,212.571732 262.392273,214.967133 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M252.366440,229.993927 \n     C253.159622,228.119278 254.273209,226.103592 255.760254,224.066406 \n     C254.984772,225.980896 253.835815,227.916885 252.366440,229.993927 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M419.099182,117.578789 \n     C417.724396,116.481773 416.272827,115.050903 414.952393,113.258751 \n     C416.396515,114.346626 417.709473,115.795776 419.099182,117.578789 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M395.423340,190.867844 \n     C397.209534,189.819641 399.369873,188.822647 401.932922,187.928162 \n     C400.156281,188.993439 397.976868,189.956253 395.423340,190.867844 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M416.393616,177.992508 \n     C417.202393,176.395767 418.323242,174.671310 419.813965,173.018997 \n     C419.024445,174.682358 417.865082,176.273560 416.393616,177.992508 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M395.356079,103.029404 \n     C394.999115,102.833374 395.015137,102.357956 395.029633,102.120560 \n     C396.992737,102.365814 398.941315,102.848473 401.113464,103.650391 \n     C399.462372,103.721581 397.587738,103.473503 395.356079,103.029404 \n   z\"\n      />\n      <path\n        fill=\"#E9F4F6\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M358.584412,105.906105 \n     C357.501251,106.944710 356.071899,108.053696 354.276184,109.047302 \n     C355.352631,107.946777 356.795410,106.961632 358.584412,105.906105 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M409.412903,184.105743 \n     C410.179718,183.068298 411.276611,181.957275 412.740601,180.964111 \n     C411.986145,182.065369 410.864594,183.048782 409.412903,184.105743 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M414.982208,112.604324 \n     C413.732208,112.138702 412.362854,111.359802 411.031830,110.204880 \n     C412.334381,110.649590 413.598633,111.470322 414.982208,112.604324 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M64.019409,252.377502 \n     C65.227577,252.836121 66.564514,253.604553 67.917908,254.743210 \n     C66.672302,254.304733 65.410248,253.496017 64.019409,252.377502 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M352.008545,182.393341 \n     C352.923950,182.527344 353.958252,182.969925 354.961212,183.791382 \n     C353.995728,183.680801 353.061615,183.191376 352.008545,182.393341 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M258.351624,221.003326 \n     C258.492065,220.131546 258.939331,219.131302 259.749390,218.097351 \n     C259.627625,219.000748 259.143066,219.937820 258.351624,221.003326 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M260.372437,217.983246 \n     C260.508087,217.115387 260.949127,216.122314 261.751343,215.096588 \n     C261.634247,215.995300 261.156036,216.926666 260.372437,217.983246 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M71.015076,257.373749 \n     C71.883728,257.509125 72.877632,257.949951 73.903229,258.752380 \n     C73.003395,258.635712 72.071869,258.157440 71.015076,257.373749 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M68.015259,255.373749 \n     C68.883415,255.509277 69.877129,255.950104 70.902946,256.752441 \n     C70.003639,256.635620 69.072227,256.157349 68.015259,255.373749 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M405.141602,105.679703 \n     C404.200409,105.591278 403.064941,105.209015 401.942200,104.436096 \n     C402.952362,104.492249 403.949890,104.939056 405.141602,105.679703 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M343.899536,173.401001 \n     C344.605682,173.841217 345.381989,174.605606 346.037720,175.738800 \n     C345.267975,175.313446 344.618805,174.519302 343.899536,173.401001 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M421.100220,120.599548 \n     C420.402893,120.155029 419.632660,119.387001 418.972961,118.246872 \n     C419.731445,118.675186 420.379395,119.475609 421.100220,120.599548 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M409.988831,108.612686 \n     C409.050903,108.477188 407.997742,108.032570 407.016663,107.206543 \n     C408.017029,107.317947 408.945312,107.810760 409.988831,108.612686 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M403.292725,187.988754 \n     C403.766785,187.253784 404.581909,186.551880 405.758881,185.968567 \n     C405.291718,186.732056 404.462738,187.376938 403.292725,187.988754 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M406.401062,186.098755 \n     C406.843933,185.410446 407.611389,184.651840 408.750916,183.985245 \n     C408.323853,184.727646 407.524780,185.378036 406.401062,186.098755 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M44.749073,234.110718 \n     C45.381073,234.364319 46.167690,234.844849 46.943863,235.717117 \n     C46.256844,235.518433 45.580269,234.928040 44.749073,234.110718 \n   z\"\n      />\n      <path\n        fill=\"#D9E9EC\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M585.375977,150.061172 \n     C585.049072,150.107681 584.985657,149.660034 585.286377,149.345215 \n     C586.036621,148.982727 586.486145,148.935059 586.935608,148.887390 \n     C586.935608,148.887390 586.982849,149.367645 586.994934,149.608597 \n     C586.572327,149.904587 586.137573,149.959625 585.375977,150.061172 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M407.020782,106.687531 \n     C406.736786,106.849678 406.385651,106.745079 406.017700,106.344002 \n     C406.318481,106.171944 406.636078,106.296364 407.020782,106.687531 \n   z\"\n      />\n      <path\n        fill=\"#E9F4F6\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M353.695740,108.978897 \n     C353.819031,109.265762 353.676788,109.618584 353.222717,109.967590 \n     C353.083984,109.657478 353.257080,109.351173 353.695740,108.978897 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M411.024750,109.698380 \n     C410.736786,109.820633 410.381195,109.677193 410.032074,109.223236 \n     C410.344727,109.086044 410.650940,109.259361 411.024750,109.698380 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M701.727295,125.952362 \n     C701.818115,126.191086 701.645874,126.526810 701.192505,126.922958 \n     C701.095703,126.672050 701.279968,126.360710 701.727295,125.952362 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M347.976135,178.304413 \n     C348.260742,178.182968 348.611877,178.327744 348.962952,178.781738 \n     C348.656158,178.917526 348.349457,178.744064 347.976135,178.304413 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M478.089386,138.904602 \n     C478.376282,139.073853 478.663208,139.243103 479.019043,139.659897 \n     C479.087952,139.907440 479.049927,139.942719 478.737244,139.970703 \n     C478.288544,139.660202 478.152527,139.321747 478.034424,138.963287 \n     C478.052277,138.943298 478.089386,138.904602 478.089386,138.904602 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M477.090607,137.903412 \n     C477.377411,138.072327 477.664246,138.241257 478.020203,138.657394 \n     C478.089386,138.904602 478.052277,138.943298 477.736206,138.972443 \n     C477.285645,138.662170 477.151123,138.322754 477.034729,137.963013 \n     C477.052856,137.942688 477.090607,137.903412 477.090607,137.903412 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M476.090942,136.903107 \n     C476.377686,137.071899 476.664459,137.240692 477.020905,137.656448 \n     C477.090607,137.903412 477.052856,137.942688 476.736145,137.972733 \n     C476.285187,137.662949 476.150909,137.323120 476.034851,136.962921 \n     C476.053040,136.942520 476.090942,136.903107 476.090942,136.903107 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M475.091125,135.902893 \n     C475.377808,136.071732 475.664490,136.240555 476.021057,136.656250 \n     C476.090942,136.903107 476.053040,136.942520 475.736023,136.972870 \n     C475.284943,136.663193 475.150879,136.323151 475.035004,135.962708 \n     C475.053192,135.942291 475.091125,135.902893 475.091125,135.902893 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M474.091522,134.902451 \n     C474.377991,135.071487 474.664459,135.240509 475.021027,135.656219 \n     C475.091125,135.902893 475.053192,135.942291 474.735779,135.973053 \n     C474.284668,135.663422 474.150970,135.323044 474.035400,134.962250 \n     C474.053558,134.941803 474.091522,134.902451 474.091522,134.902451 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M473.092194,133.901825 \n     C473.378265,134.071152 473.664337,134.240463 474.020966,134.656128 \n     C474.091522,134.902451 474.053558,134.941803 473.735962,134.973572 \n     C473.284637,134.664444 473.150909,134.323532 473.035583,133.962097 \n     C473.053986,133.941589 473.092194,133.901825 473.092194,133.901825 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M472.093109,132.900604 \n     C472.379333,133.069977 472.665527,133.239349 473.021973,133.655273 \n     C473.092194,133.901825 473.053986,133.941589 472.733978,133.975906 \n     C472.281586,133.667847 472.149200,133.325485 472.035461,132.962097 \n     C472.054138,132.941101 472.093109,132.900604 472.093109,132.900604 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M345.975983,176.307983 \n     C346.266418,176.182510 346.620087,176.323502 346.967041,176.776489 \n     C346.653290,176.917114 346.346252,176.745773 345.975983,176.307983 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M346.975769,177.307281 \n     C347.263184,177.183380 347.614777,177.326172 347.964294,177.779785 \n     C347.654816,177.918411 347.347382,177.746201 346.975769,177.307281 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M257.298950,223.043762 \n     C257.102539,222.816483 257.239014,222.534027 257.650818,222.156265 \n     C257.749268,222.332108 257.651184,222.641312 257.298950,223.043762 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M415.303619,179.024612 \n     C415.181915,178.738434 415.326263,178.385513 415.780212,178.035522 \n     C415.916443,178.344910 415.743042,178.651382 415.303619,179.024612 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M348.975891,179.304199 \n     C349.260315,179.182800 349.611603,179.327499 349.962921,179.781570 \n     C349.656219,179.917404 349.349487,179.743851 348.975891,179.304199 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M414.304810,180.023483 \n     C414.183441,179.739838 414.328217,179.389542 414.782166,179.037888 \n     C414.917847,179.343307 414.744385,179.650070 414.304810,180.023483 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M349.975616,180.303955 \n     C350.262329,180.181763 350.615662,180.325409 350.965088,180.779053 \n     C350.654846,180.915939 350.348541,180.742874 349.975616,180.303955 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M413.307739,181.023651 \n     C413.183411,180.735535 413.325714,180.383713 413.779205,180.035034 \n     C413.918396,180.345459 413.746368,180.652710 413.307739,181.023651 \n   z\"\n      />\n      <path\n        fill=\"#E3F0F3\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M350.974487,181.306717 \n     C351.266052,181.181458 351.621582,181.322601 351.968201,181.775665 \n     C351.652344,181.916092 351.345398,181.744614 350.974487,181.306717 \n   z\"\n      />\n      <path\n        fill=\"#E7F1F4\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M471.078430,131.925171 \n     C471.382568,132.073242 471.667480,132.241669 472.022766,132.655365 \n     C472.093109,132.900604 472.054138,132.941101 471.732330,132.978943 \n     C471.278900,132.671417 471.147247,132.326035 471.015625,131.980652 \n     C471.015625,131.980652 471.059265,131.945541 471.078430,131.925171 \n   z\"\n      />\n      <path\n        fill=\"#FDFDF9\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M23.109509,200.280289 \n     C23.453722,200.149216 23.669882,200.367386 23.870888,200.893661 \n     C23.648787,200.927338 23.357361,200.736588 23.109509,200.280289 \n   z\"\n      />\n      <path\n        fill=\"#E9F4F6\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M833.021973,111.694466 \n     C832.729736,111.820312 832.373047,111.680557 832.027832,111.227066 \n     C832.345459,111.085167 832.651489,111.257011 833.021973,111.694466 \n   z\"\n      />\n      <path\n        fill=\"#8AB1BC\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M146.744354,97.624512 \n     C150.436996,108.373451 147.324295,117.320244 140.511063,125.135803 \n     C138.609360,127.317276 135.398636,128.341492 132.827133,129.958206 \n     C125.089104,134.823135 117.441734,139.840012 109.569115,144.475082 \n     C108.342003,145.197556 106.121735,144.233170 104.361053,144.050873 \n     C100.572350,149.658112 95.186859,150.269394 88.753906,150.803833 \n     C80.007294,151.530472 75.331436,146.084213 70.159805,141.406357 \n     C67.588196,139.080261 65.764168,135.043930 65.204926,131.526428 \n     C62.456856,114.241600 69.391510,100.150932 81.423866,88.488518 \n     C90.932045,79.272659 101.881943,71.960632 114.972740,68.597244 \n     C120.779274,67.105392 126.484276,71.319023 129.272049,76.580139 \n     C131.667343,81.100578 135.954758,84.612038 139.368362,88.601440 \n     C141.812057,91.457336 144.194397,94.365753 146.744354,97.624512 \n   M127.609024,110.114731 \n     C132.860825,103.925690 132.860916,103.925613 127.418144,97.731766 \n     C127.198189,97.481453 126.936943,97.259300 126.756287,96.983795 \n     C124.126671,92.973732 120.316833,92.453125 116.357018,94.135254 \n     C112.559006,95.748650 108.637848,97.555153 105.512169,100.164757 \n     C99.547058,105.145004 93.727020,110.419212 88.593727,116.231148 \n     C85.440186,119.801605 83.672127,124.595779 81.281944,128.840469 \n     C81.675743,129.349503 82.069534,129.858521 82.463326,130.367554 \n     C85.433495,129.799942 88.557663,129.639862 91.344414,128.586853 \n     C99.125931,125.646515 106.919418,122.652184 114.408234,119.054756 \n     C118.957703,116.869324 122.951347,113.526833 127.609024,110.114731 \n   z\"\n      />\n      <path\n        fill=\"#8AB2BC\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M194.948898,117.253754 \n     C194.317612,118.165009 193.811859,118.962677 193.878632,119.709114 \n     C194.302811,124.449730 194.027802,128.764679 189.436554,129.825302 \n     C189.436554,132.723312 189.850052,134.983978 189.348999,137.019531 \n     C188.357544,141.047379 186.980637,144.996155 185.512299,148.882889 \n     C184.941589,150.393585 183.647385,152.833496 182.761459,152.799515 \n     C179.983383,152.692917 175.401794,152.311691 174.818314,150.779999 \n     C172.714905,145.258057 169.928787,138.758316 171.130173,133.476196 \n     C173.540680,122.877930 178.400742,112.835693 182.269455,102.571388 \n     C182.842651,101.050613 183.523132,99.570290 184.817429,96.494720 \n     C178.816269,96.758217 173.773026,96.446587 168.956100,97.346382 \n     C164.458069,98.186607 162.212234,96.591896 161.099533,92.697350 \n     C160.194092,89.528191 159.294739,86.283348 159.045685,83.022202 \n     C158.815033,80.002312 160.139114,78.443565 163.921097,78.583031 \n     C171.367874,78.857658 178.855362,78.426041 186.308746,77.990891 \n     C191.717255,77.675140 195.558731,74.700027 198.082962,69.918198 \n     C198.930420,68.312759 199.883102,66.701393 201.080963,65.353325 \n     C205.580704,60.289341 208.874954,60.744370 211.881714,66.708946 \n     C215.337769,73.564789 215.335495,73.552994 222.691010,72.139603 \n     C227.749161,71.167671 232.810501,70.211098 237.878067,69.289787 \n     C243.045685,68.350296 251.228607,71.638832 252.849030,76.119186 \n     C253.946686,79.154175 253.439484,82.769585 253.707382,87.038948 \n     C244.877274,88.317291 235.977234,89.580879 227.085861,90.902908 \n     C222.241974,91.623123 217.252533,91.937454 212.636017,93.402901 \n     C209.776718,94.310539 206.716003,96.545609 205.135849,99.058853 \n     C202.793732,102.783997 201.915390,107.396980 199.957733,111.409431 \n     C198.912033,113.552719 196.909744,115.229286 194.948898,117.253754 \n   z\"\n      />\n      <path\n        fill=\"#99B8BE\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M82.966370,224.754150 \n     C87.002701,223.504242 87.200394,225.892258 86.842857,228.455643 \n     C86.464935,231.165207 85.785240,233.832672 86.122665,236.988419 \n     C87.704025,235.212021 89.157005,233.290176 90.927101,231.727585 \n     C91.682518,231.060699 93.099930,231.143707 94.216522,230.885956 \n     C94.231224,231.930161 94.688652,233.316086 94.189056,233.963303 \n     C90.851723,238.286896 87.370956,242.505981 83.776970,246.619400 \n     C83.158401,247.327377 81.322289,247.956573 80.846382,247.589066 \n     C79.985207,246.924057 79.231377,245.444809 79.309227,244.368942 \n     C79.520767,241.445312 80.190788,238.554855 80.679070,235.651260 \n     C80.268074,235.318680 79.857079,234.986115 79.446083,234.653549 \n     C78.566025,235.968781 77.929558,237.597382 76.743690,238.519226 \n     C75.292709,239.647110 73.381348,240.182770 71.669067,240.974518 \n     C72.263885,239.118317 72.422897,236.928177 73.539085,235.471466 \n     C76.353821,231.798035 79.599785,228.455017 82.966370,224.754150 \n   z\"\n      />\n      <path\n        fill=\"#98B8BE\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M182.638550,238.009216 \n     C183.936066,238.369949 185.590195,238.784561 185.912415,239.679001 \n     C187.658600,244.526199 189.206970,249.457825 190.502701,254.443741 \n     C190.785568,255.532196 190.058594,257.260071 189.210144,258.103119 \n     C188.798935,258.511719 186.791748,257.853058 185.924255,257.157410 \n     C183.755615,255.418381 181.825409,253.382019 179.102631,250.805496 \n     C179.499680,254.152100 179.933456,256.512726 179.986145,258.881805 \n     C180.007614,259.847198 179.202148,260.830963 178.772919,261.806366 \n     C177.872787,261.027283 176.453156,260.406311 176.159851,259.442535 \n     C174.662033,254.521042 173.318634,249.540100 172.247330,244.510498 \n     C171.996002,243.330612 173.008942,241.881439 173.440247,240.556152 \n     C174.709274,241.055191 176.269180,241.246414 177.188690,242.115341 \n     C179.310745,244.120590 181.122086,246.454620 183.816071,249.514694 \n     C183.228470,244.918289 182.804443,241.601440 182.638550,238.009216 \n   z\"\n      />\n      <path\n        fill=\"#98B7BD\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M130.590240,244.034317 \n     C136.745529,246.803116 138.394577,252.155289 135.487915,258.648132 \n     C133.213943,263.727692 127.011986,266.628784 122.261925,264.427551 \n     C120.651459,263.681274 119.018967,261.919891 118.410759,260.252441 \n     C115.338135,251.828598 121.183319,243.926926 130.590240,244.034317 \n   M128.267838,248.219818 \n     C123.256134,249.378372 120.335968,255.179214 123.191513,258.947968 \n     C124.018852,260.039917 126.796982,260.814514 127.993759,260.257751 \n     C132.355453,258.228577 132.718338,251.775879 128.267838,248.219818 \n   z\"\n      />\n      <path\n        fill=\"#98B8BE\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M243.207916,166.143219 \n     C241.788940,164.522980 239.740021,162.879272 239.915146,161.522659 \n     C240.481155,157.138000 242.314819,152.716263 247.333847,152.314606 \n     C249.449539,152.145294 252.888718,154.287903 253.789322,156.262863 \n     C255.424957,159.849670 255.721680,163.976883 260.760986,164.654480 \n     C261.063843,164.695206 261.547943,166.516434 261.342529,166.663422 \n     C260.482635,167.278702 259.355682,167.993835 258.391754,167.911224 \n     C253.448807,167.487579 248.526062,166.828201 243.207916,166.143219 \n   M247.980698,162.455582 \n     C248.993103,161.868484 250.897110,161.183762 250.845566,160.713165 \n     C250.707886,159.455872 249.974838,157.633072 249.016724,157.276917 \n     C248.091934,156.933151 246.590744,158.139969 245.342758,158.665604 \n     C245.973602,159.844620 246.604446,161.023651 247.980698,162.455582 \n   z\"\n      />\n      <path\n        fill=\"#98B7BE\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M254.921326,182.851013 \n     C249.674896,182.874283 250.696640,184.967865 252.638824,187.731415 \n     C253.497589,188.953384 253.742401,190.606857 254.265930,192.064438 \n     C252.835602,191.686798 251.135681,191.678268 250.023056,190.865646 \n     C245.890335,187.847214 241.845978,184.683182 238.009430,181.300461 \n     C236.995026,180.406067 236.844818,178.531509 236.297775,177.107025 \n     C237.655609,176.854935 239.057999,176.248978 240.363373,176.413361 \n     C245.426361,177.050949 250.473022,177.855911 255.488922,178.795334 \n     C256.412811,178.968384 257.165527,180.055557 257.997253,180.720795 \n     C257.109283,181.436005 256.221313,182.151199 254.921326,182.851013 \n   z\"\n      />\n      <path\n        fill=\"#98B7BD\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M28.233879,162.243439 \n     C30.116051,160.455612 31.978476,159.047241 33.840904,157.638870 \n     C32.001682,156.252731 30.100590,154.938110 28.362774,153.434769 \n     C27.872311,153.010452 27.451820,151.698441 27.713284,151.380142 \n     C28.253475,150.722580 29.415310,149.936798 30.074606,150.115311 \n     C36.281593,151.796097 42.462425,153.592224 48.554066,155.642502 \n     C49.008995,155.795609 48.995735,159.276123 48.733036,159.341827 \n     C42.223148,160.969635 35.652565,162.356735 29.077417,163.712143 \n     C28.873188,163.754257 28.505577,163.003830 28.233879,162.243439 \n   z\"\n      />\n      <path\n        fill=\"#98B7BD\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M222.294556,228.704041 \n     C223.514877,229.589645 224.609589,230.163254 225.274384,231.056732 \n     C225.864716,231.850098 225.977936,232.998474 226.301743,233.990143 \n     C225.142868,234.087509 223.966431,234.355453 222.829636,234.238358 \n     C221.460251,234.097321 220.124573,233.629181 218.774292,233.302643 \n     C218.636353,234.836319 218.582230,236.383667 218.334930,237.899506 \n     C218.122345,239.202591 217.689209,240.469681 217.353577,241.752686 \n     C216.307968,240.950897 214.761627,240.366898 214.302048,239.310226 \n     C212.126480,234.308228 210.125504,229.219086 208.354767,224.060608 \n     C207.945114,222.867233 208.683823,221.279648 208.894119,219.873459 \n     C210.153824,220.302185 211.607758,220.463074 212.637161,221.209442 \n     C215.838608,223.530701 218.879059,226.074005 222.294556,228.704041 \n   z\"\n      />\n      <path\n        fill=\"#99B8BE\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M99.424805,252.287354 \n     C97.947472,253.833282 96.684227,255.065674 95.420990,256.298065 \n     C94.944878,255.991776 94.468765,255.685471 93.992661,255.379166 \n     C94.415596,253.766663 94.638939,252.066086 95.303398,250.560150 \n     C96.646889,247.515335 98.235817,244.579117 99.712662,241.592743 \n     C102.888702,235.170334 102.899559,235.140182 109.298683,238.180649 \n     C111.004066,238.990952 112.597801,240.036255 114.242798,240.973663 \n     C114.077019,241.611542 113.911247,242.249405 113.745468,242.887283 \n     C111.795708,242.556885 109.848267,241.995453 107.895370,241.975769 \n     C106.550850,241.962204 104.551193,242.317139 104.026703,243.205475 \n     C103.468590,244.150742 104.105972,245.991608 104.588089,247.307007 \n     C105.053474,248.576736 105.986443,249.675110 106.713997,250.848755 \n     C105.246567,250.955765 103.769104,250.991409 102.315369,251.195801 \n     C101.404755,251.323853 100.529831,251.705795 99.424805,252.287354 \n   z\"\n      />\n      <path\n        fill=\"#99B8BE\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M246.704544,201.235474 \n     C247.344284,202.698425 247.711777,203.929916 248.079254,205.161407 \n     C246.851974,205.150665 245.609848,205.248398 244.403671,205.083389 \n     C243.801712,205.001053 243.268692,204.432938 242.699005,204.093765 \n     C238.426727,201.550186 234.302841,197.488373 229.473816,203.214523 \n     C227.472504,199.062119 231.350342,191.137634 236.139496,189.108643 \n     C236.394882,189.656250 237.010406,190.349899 236.857071,190.745712 \n     C235.553268,194.111221 236.896042,195.889771 240.022293,197.196564 \n     C242.292755,198.145645 244.304947,199.712570 246.704544,201.235474 \n   z\"\n      />\n      <path\n        fill=\"#9EBABF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M38.177692,197.874847 \n     C40.018967,196.094666 41.760590,194.343246 43.860016,193.342255 \n     C46.841511,191.920700 50.028336,190.805130 53.242695,190.048523 \n     C54.881927,189.662689 56.772560,190.344925 58.549557,190.544388 \n     C57.322311,191.704285 56.280758,193.250320 54.830986,193.947495 \n     C51.299194,195.645920 47.578114,196.950760 44.196442,198.308426 \n     C44.149765,199.277542 44.095329,199.606537 44.124802,199.927826 \n     C44.296604,201.800766 44.488098,203.671921 44.672935,205.543671 \n     C43.113777,204.302887 41.404629,203.203918 40.049324,201.770386 \n     C39.176628,200.847336 38.823692,199.432877 38.177692,197.874847 \n   z\"\n      />\n      <path\n        fill=\"#9EBABF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M49.525631,171.486389 \n     C50.762833,172.420059 51.637871,173.264984 52.512909,174.109894 \n     C51.316654,174.741898 50.185089,175.682220 48.912266,175.949249 \n     C44.756126,176.821213 40.548492,177.447723 36.340946,178.172012 \n     C36.521076,180.964172 36.668324,183.246643 36.860516,186.225723 \n     C31.702665,184.414673 31.412527,180.491989 31.289335,177.192505 \n     C31.246422,176.043167 34.193394,174.166916 36.050297,173.685928 \n     C40.331680,172.576981 44.781799,172.119461 49.525631,171.486389 \n   z\"\n      />\n      <path\n        fill=\"#9EBABF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M166.058746,262.515808 \n     C164.790146,266.333252 162.851715,265.455078 162.328430,262.958038 \n     C161.181259,257.484009 160.658539,251.867828 160.127228,246.286255 \n     C160.030838,245.273727 161.107925,244.149506 161.643280,243.076859 \n     C162.563065,243.993149 164.140778,244.812500 164.292435,245.841934 \n     C165.085403,251.224808 165.516479,256.661011 166.058746,262.515808 \n   z\"\n      />\n      <path\n        fill=\"#9EBABF\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M64.573212,229.836395 \n     C63.003231,230.389206 61.711777,230.693832 60.420322,230.998444 \n     C60.187767,230.579041 59.955212,230.159653 59.722656,229.740250 \n     C63.740677,224.006241 68.727982,219.187347 74.747215,215.449402 \n     C75.298836,215.106842 76.673042,216.088898 77.665268,216.455856 \n     C77.253517,217.416321 77.088547,218.641983 76.388893,219.293030 \n     C72.616371,222.803421 68.711174,226.171219 64.573212,229.836395 \n   z\"\n      />\n      <path\n        fill=\"#89B1BD\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M626.434814,189.905502 \n     C625.970215,171.583755 625.970215,153.177246 625.970215,133.846725 \n     C618.622375,133.846725 611.396667,133.846725 603.729614,133.860245 \n     C603.162842,124.587067 602.929932,115.298859 603.059326,106.015717 \n     C603.074158,104.950989 605.106262,103.006905 606.214478,102.998596 \n     C629.461914,102.824265 652.710938,102.893600 675.959534,102.842735 \n     C678.811523,102.836502 679.141418,104.411636 679.129578,106.672119 \n     C679.085144,115.140991 679.123230,123.610283 679.153809,132.549316 \n     C673.867065,133.072739 668.548401,133.331619 663.249512,133.113052 \n     C659.203613,132.946167 657.714478,134.259720 657.774353,138.486099 \n     C657.990479,153.755386 657.708557,169.032043 657.956665,184.300354 \n     C658.028442,188.716415 656.670471,190.084076 652.294556,189.922379 \n     C643.839783,189.609955 635.365540,189.824600 626.434814,189.905502 \n   z\"\n      />\n      <path\n        fill=\"#88B1BC\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M470.661407,132.086090 \n     C471.147247,132.326035 471.278900,132.671417 471.713684,132.999954 \n     C472.149200,133.325485 472.281586,133.667847 472.715576,133.996429 \n     C473.150909,134.323532 473.284637,134.664444 473.717834,134.994019 \n     C474.150970,135.323044 474.284668,135.663422 474.717590,135.993469 \n     C475.150879,136.323151 475.284943,136.663193 475.717834,136.993256 \n     C476.150909,137.323120 476.285187,137.662949 476.718018,137.993057 \n     C477.151123,138.322754 477.285645,138.662170 477.718353,138.992432 \n     C478.152527,139.321747 478.288544,139.660202 478.722107,139.991791 \n     C479.123596,140.562866 479.227478,141.140823 479.718872,142.087784 \n     C480.434784,142.313263 480.763184,142.169754 481.091553,142.026245 \n     C481.134674,129.438171 481.177765,116.850105 481.185883,103.833054 \n     C491.121826,103.215126 501.092743,103.026199 511.531097,102.803848 \n     C512.291443,104.384331 512.837952,105.997993 512.839417,107.612167 \n     C512.864807,134.682022 512.822205,161.751953 512.728760,189.258301 \n     C487.815735,189.754959 462.968719,189.815201 437.673401,189.866943 \n     C437.131836,173.212494 437.011810,156.566620 436.953979,139.920547 \n     C436.910065,127.276108 436.945251,114.631393 436.945251,100.991486 \n     C438.625702,102.384125 439.752441,103.184212 440.722504,104.142876 \n     C449.013428,112.336205 457.246521,120.588356 465.575989,128.742081 \n     C466.956116,130.093079 468.720459,131.051620 470.661407,132.086090 \n   z\"\n      />\n      <path\n        fill=\"#89B1BC\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M586.985596,148.457596 \n     C586.486145,148.935059 586.036621,148.982727 585.259399,149.120804 \n     C576.833435,149.226532 568.735352,149.241867 560.269287,149.435455 \n     C559.135132,152.323029 558.368835,155.032349 557.252747,158.978271 \n     C569.968933,158.978271 581.508911,158.978271 593.505737,159.078857 \n     C593.919006,169.067017 593.875488,178.954559 593.759399,189.280075 \n     C571.771667,189.773514 549.856567,189.829010 527.478210,189.956635 \n     C527.046326,161.394882 527.077698,132.761002 527.089233,103.681122 \n     C539.467773,103.109299 551.866028,102.930161 564.264832,102.874832 \n     C573.859314,102.832008 583.454468,102.944153 593.505737,103.090996 \n     C593.948853,112.812035 593.935486,122.429474 593.933228,132.513428 \n     C591.205811,133.265396 588.470276,133.758698 585.728271,133.797043 \n     C577.769592,133.908417 569.803894,133.996307 561.850281,133.768021 \n     C558.094849,133.660248 558.008118,135.677734 557.978821,138.441086 \n     C557.948669,141.274689 558.184875,143.152939 561.888123,143.045120 \n     C569.985413,142.809402 578.094360,142.972183 586.736938,142.972183 \n     C586.849915,144.885269 586.942749,146.456543 586.985596,148.457596 \n   z\"\n      />\n      <path\n        fill=\"#D9E9EC\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M480.777313,142.031815 \n     C480.763184,142.169754 480.434784,142.313263 479.971619,142.274689 \n     C480.045624,142.074188 480.254364,142.055786 480.777313,142.031815 \n   z\"\n      />\n      <path\n        fill=\"#F2F5EA\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M127.401848,110.409416 \n     C122.951347,113.526833 118.957703,116.869324 114.408234,119.054756 \n     C106.919418,122.652184 99.125931,125.646515 91.344414,128.586853 \n     C88.557663,129.639862 85.433495,129.799942 82.463326,130.367554 \n     C82.069534,129.858521 81.675743,129.349503 81.281944,128.840469 \n     C83.672127,124.595779 85.440186,119.801605 88.593727,116.231148 \n     C93.727020,110.419212 99.547058,105.145004 105.512169,100.164757 \n     C108.637848,97.555153 112.559006,95.748650 116.357018,94.135254 \n     C120.316833,92.453125 124.126671,92.973732 126.756287,96.983795 \n     C126.936943,97.259300 127.198189,97.481453 127.418144,97.731766 \n     C132.860916,103.925613 132.860825,103.925690 127.401848,110.409416 \n   z\"\n      />\n      <path\n        fill=\"#EBF2EA\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M128.619415,248.356659 \n     C132.718338,251.775879 132.355453,258.228577 127.993759,260.257751 \n     C126.796982,260.814514 124.018852,260.039917 123.191513,258.947968 \n     C120.335968,255.179214 123.256134,249.378372 128.619415,248.356659 \n   z\"\n      />\n      <path\n        fill=\"#DEEBEE\"\n        opacity=\"1.000000\"\n        stroke=\"none\"\n        d=\"\n   M247.608002,162.329132 \n     C246.604446,161.023651 245.973602,159.844620 245.342758,158.665619 \n     C246.590744,158.139969 248.091934,156.933151 249.016724,157.276917 \n     C249.974838,157.633072 250.707886,159.455872 250.845566,160.713165 \n     C250.897110,161.183762 248.993103,161.868484 247.608002,162.329132 \n   z\"\n      />\n    </svg>\n  );\n}\n","import React from \"react\";\n\nexport default function Search(props) {\n  return (\n    <svg\n      width=\"25px\"\n      height=\"25px\"\n      viewBox=\"0 0 1024 1024\"\n      data-aut-id=\"icon\"\n      color={props.color ? props.color : \"\"}\n      fillRule=\"evenodd\"\n      style={{ cursor: \"pointer\" }}\n    >\n      <path\n        className=\"rui-77aaa\"\n        d=\"M448 725.333c-152.917 0-277.333-124.416-277.333-277.333s124.416-277.333 277.333-277.333c152.917 0 277.333 124.416 277.333 277.333s-124.416 277.333-277.333 277.333v0zM884.437 824.107v0.021l-151.915-151.936c48.768-61.781 78.144-139.541 78.144-224.192 0-199.979-162.688-362.667-362.667-362.667s-362.667 162.688-362.667 362.667c0 199.979 162.688 362.667 362.667 362.667 84.629 0 162.411-29.376 224.171-78.144l206.144 206.144h60.352v-60.331l-54.229-54.229z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react'\n\n\nexport default function Arrow() {\n    return ( <svg\n        width=\"24px\"\n        height=\"24px\"\n        viewBox=\"0 0 1024 1024\"\n        data-aut-id=\"icon\"\n      \n        fillRule=\"evenodd\"\n      >\n        <path\n          className=\"rui-77aaa\"\n          d=\"M85.392 277.333h60.331l366.336 366.336 366.336-366.336h60.331v60.331l-408.981 409.003h-35.307l-409.045-409.003z\"\n        />\n      </svg>)\n}","import React from 'react'\n\n export default function SellButton() {\n    return(<svg\n        width={104}\n        height={48}\n        viewBox=\"0 0 1603 768\"\n        className=\"_3V9PS\"\n      >\n        <g>\n          <path\n            className=\"all\"\n            d=\"M434.442 16.944h718.82c202.72 0 367.057 164.337 367.057 367.058s-164.337 367.057-367.057 367.057h-718.82c-202.721 0-367.058-164.337-367.058-367.058s164.337-367.058 367.058-367.058z\"\n          />\n          <path\n            className=\"left\"\n            d=\"M427.241 669.489c-80.917 0-158.59-25.926-218.705-73.004l-0.016-0.014c-69.113-54.119-108.754-131.557-108.754-212.474 0-41.070 9.776-80.712 29.081-117.797 25.058-48.139 64.933-89.278 115.333-118.966l-52.379-67.581c-64.73 38.122-115.955 90.98-148.159 152.845-24.842 47.745-37.441 98.726-37.441 151.499 0 104.027 50.962 203.61 139.799 273.175h0.016c77.312 60.535 177.193 93.887 281.22 93.887h299.699l25.138-40.783-25.138-40.783h-299.698z\"\n          />\n          <path\n            className=\"top\"\n            d=\"M1318.522 38.596v0c-45.72-14.369-93.752-21.658-142.762-21.658h-748.511c-84.346 0-165.764 21.683-235.441 62.713l3.118 51.726 49.245 15.865c54.16-31.895 117.452-48.739 183.073-48.739h748.511c38.159 0 75.52 5.657 111.029 16.829v0c44.91 14.111 86.594 37.205 120.526 66.792l66.163-57.68c-43.616-38.010-97.197-67.703-154.957-85.852z\"\n          />\n          <path\n            className=\"right\"\n            d=\"M1473.479 124.453l-55.855 9.91-10.307 47.76c61.844 53.929 95.92 125.617 95.92 201.88 0 25.235-3.772 50.26-11.214 74.363-38.348 124.311-168.398 211.129-316.262 211.129h-448.812l25.121 40.783-25.121 40.783h448.812c190.107 0 357.303-111.638 406.613-271.498 9.572-31.009 14.423-63.162 14.423-95.559 0-98.044-43.805-190.216-123.317-259.551z\"\n          />\n        </g>\n      </svg>)\n}","import React  from 'react'\n\n export default function SellButtonPlus(params) {\n    return(\n        <svg\n                width=\"16px\"\n                height=\"16px\"\n                viewBox=\"0 0 1024 1024\"\n                data-aut-id=\"icon\"\n                \n                fillRule=\"evenodd\"\n              >\n                <path\n                  className=\"rui-367TP\"\n                  d=\"M414.898 123.739v291.218h-291.218l-97.014 97.014 97.014 97.131h291.218v291.16l97.073 97.071 97.073-97.071v-291.16h291.16l97.131-97.131-97.131-97.014h-291.16v-291.218l-97.073-97.073z\"\n                />\n              </svg>\n    )\n}","import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n// const firebaseConfig = {\n//     apiKey: \"AIzaSyCggZCcBun0cwNfOWGC2K8pZcgIRWMfqwY\",\n//     authDomain: \"olx-sijeesh.firebaseapp.com\",\n//     projectId: \"olx-sijeesh\",\n//     storageBucket: \"olx-sijeesh.appspot.com\",\n//     messagingSenderId: \"767411886432\",\n//     appId: \"1:767411886432:web:2ef6862afc88f2c423a605\",\n//     measurementId: \"G-4ELNR9DJHL\"\n//   };\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDFLr8sqoFq_wXEK09RSULtUv49D_VbVZI\",\n  authDomain: \"original-bolt-359819.firebaseapp.com\",\n  projectId: \"original-bolt-359819\",\n  storageBucket: \"original-bolt-359819.appspot.com\",\n  messagingSenderId: \"1080402575491\",\n  appId: \"1:1080402575491:web:4eabde866323044a5ddbb6\",\n  measurementId: \"G-6HY3K1J3MY\",\n};\nexport const Firebase = firebase.initializeApp(firebaseConfig); //named export\n","import React from \"react\";\nimport \"./closeicon.css\";\nfunction CloseIcon() {\n  return (\n    <div>\n      <div className=\"close\"></div>\n    </div>\n  );\n}\n\nexport default CloseIcon;\n","import React, { useState, useContext } from \"react\";\nimport { AllPostContext } from \"..//../contextStore/AllPostContext\";\nimport { PostContext } from \"../../contextStore/PostContext\";\nimport SearchIcon from \"..//../assets/SearchIcon\";\nimport CloseIcon from \"..//../assets/CloseIcon/CloseIcon\";\nimport { useHistory } from \"react-router\";\nimport InputHints from \"react-input-hints\";\n\nimport \"./search.css\";\nfunction Search() {\n  const { allPost, setAllPost } = useContext(AllPostContext);\n  const { setPostContent } = useContext(PostContext);\n  const history = useHistory();\n\n  const [filteredData, setFilteredData] = useState([]);\n  const [wordEntered, setWordEntered] = useState(\"\");\n\n  const handleFilter = (event) => {\n    const searchWord = event.target.value;\n    setWordEntered(searchWord);\n    const newFilter = allPost.filter((value) => {\n      return (\n        value.name.toLowerCase().includes(searchWord.toLowerCase()) ||\n        value.category.toLowerCase().includes(searchWord.toLowerCase())\n      );\n    });\n\n    if (searchWord === \"\") {\n      setFilteredData([]);\n    } else {\n      setFilteredData(newFilter);\n    }\n  };\n\n  const clearInput = () => {\n    setFilteredData([]);\n    setWordEntered(\"\");\n  };\n  const handleSelectedSearch = (item) => {\n    setPostContent(item);\n    history.push(\"/view\");\n  };\n  const handleSearchClick = () => {\n    if (filteredData.length === 0) {\n      alert(\n        \"No items found.., please search by product category or product name\"\n      );\n    } else {\n      setAllPost(filteredData);\n      history.push(\"/viewmore\");\n    }\n  };\n\n  return (\n    <div className=\"search\">\n      <div className=\"searchInputs\">\n        <InputHints\n          type=\"text\"\n          value={wordEntered}\n          onChange={handleFilter}\n          placeholders={[\n            \"Search Auditoriums\",\n            \"Search Gyms\",\n            \"Search Swimming Pools\",\n            \"Search Cafes\",\n            \"Search Open Grounds\",\n            \"Search Lounges\",\n          ]}\n        />\n\n        <div className=\"searchIcon\">\n          <div onClick={handleSearchClick}>\n            {\" \"}\n            <SearchIcon />{\" \"}\n          </div>\n          {filteredData.length !== 0 && (\n            <div id=\"clearBtn\" onClick={clearInput}>\n              <CloseIcon />\n            </div>\n          )}\n        </div>\n      </div>\n      {filteredData.length !== 0 && (\n        <div className=\"dataResult\">\n          {filteredData.slice(0, 15).map((value, key) => {\n            return (\n              <div\n                key={key}\n                className=\"dataItem\"\n                onClick={() => handleSelectedSearch(value)}\n              >\n                <p>{value.name} </p>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AllPostContext } from \"../../contextStore/AllPostContext\";\nimport { PostContext } from \"../../contextStore/PostContext\";\nimport \"./Header.css\";\nimport OlxLogo from \"../../assets/OlxLogo\";\nimport SearchIcon from \"../../assets/SearchIcon\";\nimport Arrow from \"../../assets/Arrow\";\nimport SellButton from \"../../assets/SellButton\";\nimport SellButtonPlus from \"../../assets/SellButtonPlus\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../contextStore/AuthContext\";\nimport { Firebase } from \"../../firebase/config\";\nimport Search from \"../Search/Search\";\nfunction Header() {\n  const { allPost } = useContext(AllPostContext);\n  const { setPostContent } = useContext(PostContext);\n  const history = useHistory();\n  const [filteredData, setFilteredData] = useState([]);\n  const [wordEntered, setWordEntered] = useState(\"\");\n  const handleFilter = (event) => {\n    const searchWord = event.target.value;\n    setWordEntered(searchWord);\n    const newFilter = allPost.filter((value) => {\n      return value.name.toLowerCase().includes(searchWord.toLowerCase());\n    });\n\n    if (searchWord === \"\") {\n      setFilteredData([]);\n    } else {\n      setFilteredData(newFilter);\n    }\n  };\n  const clearInput = () => {\n    setFilteredData([]);\n    setWordEntered(\"\");\n  };\n  const handleSelectedSearch = (value) => {\n    setPostContent(value);\n    history.push(\"/view\");\n  };\n  const handleEmptyClick = () => {\n    alert(\"No items found.., please search by product name\");\n  };\n  const { user } = useContext(AuthContext);\n\n  const logoutHandler = () => {\n    Firebase.auth()\n      .signOut()\n      .then(() => {\n        history.push(\"/login\");\n      });\n  };\n\n  return (\n    <div className=\"headerParentDiv\">\n      <div className=\"headerChildDiv\">\n        <div className=\"brandName\">\n          <OlxLogo></OlxLogo>\n        </div>\n        <div className=\"placeSearch\">\n          <input\n            type=\"text\"\n            placeholder=\"Search specific product...\"\n            value={wordEntered}\n            onChange={handleFilter}\n          />\n          {filteredData.length === 0 ? (\n            <div onClick={handleEmptyClick}>\n              {\" \"}\n              <SearchIcon />{\" \"}\n            </div>\n          ) : (\n            <div id=\"clearBtn\" onClick={clearInput}>\n              {\" \"}\n              <Arrow></Arrow>\n            </div>\n          )}\n          {filteredData.length !== 0 && (\n            <div className=\"dataResult-header\">\n              {filteredData.slice(0, 15).map((value, key) => {\n                return (\n                  <div\n                    key={key}\n                    className=\"dataItem-header\"\n                    onClick={() => handleSelectedSearch(value)}\n                  >\n                    <p>{value.name} </p>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n        <div className=\"productSearch\">\n          <Search />\n        </div>\n\n        {/* <div className=\"language\">\n          <span> ENGLISH </span>\n          <Arrow></Arrow>\n        </div> */}\n        <div className=\"loginPage\">\n          <i\n            class=\"fa-solid fa-user pr-2 userIcon\"\n            style={{ color: \"white\" }}\n          ></i>\n          {user ? (\n            user.displayName\n          ) : (\n            <Link to=\"/login\">\n              <span className=\"loginLink\">Login/Register</span>\n            </Link>\n          )}\n          <hr />\n        </div>\n        {user && (\n          <span onClick={logoutHandler} className=\"logout-span\">\n            Logout\n          </span>\n        )}\n\n        <Link to=\"/create\">\n          {\" \"}\n          <div className=\"sellMenu\">\n            <SellButton></SellButton>\n            <div className=\"sellMenuContent\">\n              <SellButtonPlus></SellButtonPlus>\n              <span>SELL</span>\n            </div>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { PostContext } from \"../../contextStore/PostContext\";\nimport \"./postcards.css\";\n\nfunction PostCards({ product, index }) {\n  let { setPostContent } = useContext(PostContext); //at the time of onClick on post ,the specified post item assigned to postContent by setPostContent function and it will be stored in a global context PostContext\n\n  const history = useHistory(); //at the time of onClick on post , we want redirect to the view post page\n\n  return (\n    <div\n      className=\"card\"\n      key={index}\n      onClick={() => {\n        setPostContent(product);\n        history.push(\"/view\");\n      }}\n    >\n      <div className=\"image\">\n        <img src={product.url} alt=\"\" />\n      </div>\n      <div className=\"content\">\n        <p className=\"rate\">&#x20B9; {product.price}</p>\n        <span className=\"category\"> {product.category} </span>\n        <p className=\"name\"> {product.name}</p>\n        <p className=\"location\">{product.location}</p>\n      </div>\n      <div className=\"date\">\n        <span>{product.createdAt}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default PostCards;\n","import React, { useContext } from \"react\";\nimport \"./dynamicposts.css\";\nimport { AllPostContext } from \"../../contextStore/AllPostContext\";\nimport PostCards from \"../PostCards/PostCards\";\nimport { Link } from \"react-router-dom\";\n\nfunction DynamicPosts({ category }) {\n  const { allPost } = useContext(AllPostContext);\n  let displayCards = allPost\n    .filter((itm) => itm.category === category)\n    .map((product, index) => {\n      return <PostCards product={product} index={index} key={index} />;\n    });\n\n  return (\n    <>\n      {category !== \"null\" && (\n        <div>\n          <div className=\"moreView\">\n            <div className=\"heading\">\n              <span>{category}</span>\n              <Link to=\"./viewmore\">\n                {\" \"}\n                <span>View more</span>{\" \"}\n              </Link>\n            </div>\n            <div className=\"cards\">{displayCards}</div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default DynamicPosts;\n","import React, { useState } from \"react\";\nimport DynamicPosts from \"../DynamicPosts/DynamicPosts\";\n\nimport \"./Banner.css\";\n\nfunction Banner() {\n  let [category, setCategory] = useState();\n\n  return (\n    <div className=\"bannerParentDiv\">\n      <div className=\"bannerChildDiv\">\n        <div className=\"menuBar\">\n          <div className=\"otherQuickOptions\">\n            <span\n              className=\"bannerCategory\"\n              onClick={() => setCategory(\"Auditorium\")}\n            >\n              AUDITORIUM\n            </span>\n            <span className=\"bannerCategory\" onClick={() => setCategory(\"Gym\")}>\n              GYM\n            </span>\n            <span\n              className=\"bannerCategory\"\n              onClick={() => setCategory(\"Swimming Pool\")}\n            >\n              SWIMMING POOL\n            </span>\n            <span\n              className=\"bannerCategory\"\n              onClick={() => setCategory(\"Cafes\")}\n            >\n              CAFES\n            </span>\n            <span\n              className=\"bannerCategory\"\n              onClick={() => setCategory(\"Open Grounds\")}\n            >\n              OPEN GROUNDS\n            </span>\n            <span\n              className=\"bannerCategory\"\n              onClick={() => setCategory(\"Lounges\")}\n            >\n              LOUNGES\n            </span>\n          </div>\n        </div>\n        <div className=\"banner\">\n          <img src=\"../../../Images/banner copy.png\" alt=\"\" />\n        </div>\n      </div>\n      {category != null && <DynamicPosts category={category} />}\n    </div>\n  );\n}\n\nexport default Banner;\n","import React from \"react\";\nimport './barloading.css'\nfunction BarLoading() {\n  return (\n    <div className=\"bar-loading\">\n      <div className=\"middle\">\n        <div className=\"bar bar1\"></div>\n        <div className=\"bar bar2\"></div>\n        <div className=\"bar bar3\"></div>\n        <div className=\"bar bar4\"></div>\n        <div className=\"bar bar5\"></div>\n        <div className=\"bar bar6\"></div>\n        <div className=\"bar bar7\"></div>\n        <div className=\"bar bar8\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default BarLoading;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Post.css\";\nimport { Firebase } from \"../../firebase/config\";\nimport BarLoading from \"../Loading/BarLoading\";\nimport PostCards from \"../PostCards/PostCards\";\n\nimport { AllPostContext } from \"../../contextStore/AllPostContext\";\n\nfunction Posts() {\n  const { setAllPost } = useContext(AllPostContext);\n  let [posts, setPosts] = useState([]); //for showing all posts in Descending order of date\n  let [posts2, setPosts2] = useState([]); //for showing all posts in Ascending order of date\n  let [loading, setLoading] = useState(false);\n  let [loading2, setLoading2] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setLoading2(true);\n    Firebase.firestore() //retreving all posts from firebase in descending order\n      .collection(\"products\")\n      .orderBy(\"createdAt\", \"desc\")\n      .get()\n      .then((snapshot) => {\n        let allPostsDescendingOder = snapshot.docs.map((product) => {\n          return {\n            ...product.data(),\n            id: product.id,\n          };\n        });\n\n        setPosts2(allPostsDescendingOder); //set to post\n        setAllPost(allPostsDescendingOder);\n        setLoading(false);\n      });\n    Firebase.firestore() //retreving all posts from firebase in asecnding order of date\n      .collection(\"products\")\n      .orderBy(\"createdAt\", \"asc\")\n      .get()\n      .then((snapshot) => {\n        let allPostsAscendingOder = snapshot.docs.map((product) => {\n          return {\n            ...product.data(),\n            id: product.id,\n          };\n        });\n        setPosts(allPostsAscendingOder);\n        setLoading2(false);\n      });\n  }, [setAllPost]);\n  // quickMenuCards assign all cards of post item later it will be displayed\n  let quickMenuCards = posts.map((product, index) => {\n    return (\n      <div className=\"quick-menu-cards\" key={index}>\n        {\" \"}\n        <PostCards product={product} index={index} />{\" \"}\n      </div>\n    );\n  });\n\n  let freshRecomendationCards = posts2.map((product, index) => {\n    if (index < 4) {\n      return (\n        <div className=\"fresh-recomendation-card\" key={index}>\n          {\" \"}\n          <PostCards product={product} index={index} />{\" \"}\n        </div>\n      );\n    }\n    return null;\n  });\n  return (\n    <div className=\"postParentDiv\">\n      {posts && (\n        <div className=\"moreView\">\n          <div className=\"heading\">\n            <span>Quick Menu</span>\n            <Link to=\"./viewmore\">\n              {\" \"}\n              <span>View more</span>{\" \"}\n            </Link>\n          </div>\n          <div className=\"cards\">\n            {\" \"}\n            {loading ? <BarLoading /> : quickMenuCards}\n          </div>\n        </div>\n      )}\n      <div className=\"recommendations\">\n        <div className=\"heading\" id=\"recHeading\">\n          <span>Top-Picks</span>\n        </div>\n        <div className=\"fresh-recomendation-cards\">\n          {loading2 ? <BarLoading /> : freshRecomendationCards}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Posts;\n","import React from \"react\";\n\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"footerParentDiv\">\n      <div className=\"content\">\n        <div>\n          <div className=\"heading\">\n            <p>POPULAR LOCATIONS</p>\n          </div>\n          <div className=\"list\">\n            <ul>\n              <li>Kolkata</li>\n              <li>Mumbai</li>\n              <li>Chennai</li>\n              <li>Pune</li>\n            </ul>\n          </div>\n        </div>\n        <div>\n          <div className=\"heading\">\n            <p>ABOUT US</p>\n          </div>\n          <div className=\"list\">\n            <ul>\n              <li>About OLX Group</li>\n              <li>Careers</li>\n              <li>Contact Us</li>\n              <li>OLXPeople</li>\n            </ul>\n          </div>\n        </div>\n        <div>\n          <div className=\"heading\">\n            <p>OLX</p>\n          </div>\n          <div className=\"list\">\n            <ul>\n              <li>Help</li>\n              <li>Sitemap</li>\n              <li>Legal & Privacy information</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <p>Other Countries Pakistan - South Africa - Indonesia</p>\n        <p>Free Classifieds in India. © 2006-2021 OLX</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React,{useEffect,useContext} from 'react';\n\nimport Header from '../Components/Header/Header';\nimport Banner from '../Components/Banner/Banner';\n\nimport Posts from '../Components/Posts/Posts';\nimport Footer from '../Components/Footer/Footer';\nimport { Firebase } from '../firebase/config';\nimport { AuthContext } from '../contextStore/AuthContext';\n\nfunction Home(props) {\n const {setUser}=useContext(AuthContext)\n  useEffect(()=>{\n    \n    Firebase.auth().onAuthStateChanged((user)=>{\n      setUser(user)\n      \n    })\n    \n \n  },[setUser])\n  \n  return (\n    <div className=\"homeParentDiv\">\n      <Header />\n      <Banner />\n      <Posts />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n \n","export default __webpack_public_path__ + \"static/media/olx-logo.b3f099a2.png\";","import React from \"react\";\nimport './signuploading.css'\nconst SignUpLoading = () => {\n  return (\n    <div className=\"signup-loading\">\n      {/* <h1 className=\"title\">Loading...</h1> */}\n      <div className=\"rainbow-marker-loader\"></div>\n    </div>\n  );\n};\n\nexport default SignUpLoading;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../../olx-logo.png\";\nimport \"./Signup.css\";\nimport { Firebase } from \"../../firebase/config\";\nimport { useHistory } from \"react-router\";\nimport SignUpLoading from \"../Loading/SignUpLoading\";\n\nexport default function Signup() {\n  const history = useHistory();\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [phone, setPhone] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  const handleSubmit = (e) => {\n    setLoading(true);\n    e.preventDefault();\n    Firebase.auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        result.user.updateProfile({ displayName: name }).then(() => {\n          Firebase.firestore().collection(\"users\").doc(result.user.uid).set({\n            id: result.user.uid,\n            name: name,\n            phone: phone,\n          });\n        });\n      })\n      .then(() => {\n        history.push(\"/login\");\n      })\n      .catch((error) => {\n        alert(error.message);\n        window.location.reload();\n      });\n  };\n  return (\n    <>\n      {loading && <SignUpLoading />}{\" \"}\n      <div>\n        <div className=\"signupParentDiv\">\n          <img width=\"200px\" height=\"200px\" src={Logo} alt=\"\"></img>\n          <form onSubmit={handleSubmit}>\n            <label>Full Name</label>\n            <br />\n            <input\n              className=\"input\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              name=\"name\"\n            />\n            <br />\n            <label>Email</label>\n            <br />\n            <input\n              className=\"input\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              name=\"email\"\n            />\n            <br />\n            <label>Phone</label>\n            <br />\n            <input\n              className=\"input\"\n              type=\"number\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n              name=\"phone\"\n            />\n            <br />\n            <label>Password</label>\n            <br />\n            <input\n              className=\"input\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              name=\"password\"\n            />\n            <br />\n            <br />\n            <button>Signup</button>\n          </form>\n          <Link to=\"/login\">Login</Link>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nimport Signup from '../Components/Signup/Signup';\n\nfunction SignupPage() {\n  return (\n    <div>\n      <Signup />\n    </div>\n  );\n}\n\nexport default SignupPage;\n","import React from \"react\";\nimport \"./roundloading.css\"\nfunction RoundLoading() {\n  return (\n    <div className=\"round-loader-container\">\n      <div className=\"round-loader\">\n        <span>Loading...</span>\n       \n      </div>\n    </div>\n  );\n}\n\nexport default RoundLoading;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { Firebase } from \"../../firebase/config\";\nimport Logo from \"../../olx-logo.png\";\nimport RoundLoading from \"../Loading/RoundLoading\";\nimport \"./Login.css\";\n\nfunction Login() {\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const handleSubmit = (e) => {\n    setLoading(true);\n    e.preventDefault();\n    Firebase.auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n  return (\n    <>\n      {loading && <RoundLoading />}\n      <div>\n        <div className=\"loginParentDiv\">\n          <img width=\"200px\" height=\"200px\" src={Logo} alt=\"\"></img>\n          <form onSubmit={handleSubmit}>\n            <label>Email</label>\n            <br />\n            <input\n              className=\"input\"\n              type=\"email\"\n              placeholder=\"abc@xyz.com\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <br />\n            <label>Password</label>\n            <br />\n            <input\n              className=\"input\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <br />\n            <br />\n            <button>Login</button>\n          </form>\n          <Link to=\"/signup\">Signup</Link>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport Login from '../Components/Login/Login';\n\nfunction LoginPage() {\n  return (\n    <div>\n      <Login />\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React from \"react\";\nimport './goloading.css'\nfunction GoLoading() {\n  return (\n      <div className=\"loading-parent\">\n    <div className=\"loading-container\">\n      <div className=\"top-left\"></div>\n      <div className=\"top-right\"></div>\n      <div className=\"bottom-left\"></div>\n      <div className=\"bottom-right\"></div>\n    </div>\n    </div>\n  );\n}\n\nexport default GoLoading;\n","import React, { Fragment, useState, useContext } from \"react\";\nimport \"./Create.css\";\nimport Header from \"../Header/Header\";\nimport { Firebase } from \"../../firebase/config\";\nimport { AuthContext } from \"../../contextStore/AuthContext\";\nimport { useHistory } from \"react-router\";\nimport GoLoading from \"../Loading/GoLoading\";\nconst Create = () => {\n  const { user } = useContext(AuthContext);\n  const history = useHistory();\n  let [name, setName] = useState(\"\");\n  let [category, setCategory] = useState(\"\");\n  let [price, setPrice] = useState(\"\");\n  let [description, setDescription] = useState(\"\");\n  let [image, setImage] = useState();\n  let [location, setLocation] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  const handleSubmit = () => {\n    setLoading(true);\n    let date = new Date().toDateString();\n    Firebase.storage()\n      .ref(`/image/${image.name}`)\n      .put(image)\n      .then(({ ref }) => {\n        ref.getDownloadURL().then((url) => {\n          Firebase.firestore()\n            .collection(\"products\")\n            .add({\n              name,\n              category,\n              price,\n              description,\n              url,\n              location,\n              userId: user.uid,\n              createdAt: date,\n            })\n            .then(() => {\n              console.log(\"Uploaded\");\n              setLoading(false);\n              history.push(\"/\");\n            });\n        });\n      });\n  };\n  return (\n    <Fragment>\n      <Header />\n      {loading && <GoLoading />}\n      <div className=\"centerDiv\">\n        <label>Name</label>\n        <br />\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"Name\"\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n        <br />\n        <label>Category:</label>\n        <select\n          name=\"Category\"\n          onChange={(e) => {\n            setCategory(e.target.value);\n          }}\n          className=\"input\"\n        >\n          {\" \"}\n          <option>Select Category</option>\n          <option value=\"Auditorium\">Auditorium</option>\n          <option value=\"Gym\">Gym</option>\n          <option value=\"Swimming Pool\">Swimming Pool</option>\n          <option value=\"Cafe\">Cafe</option>\n          <option value=\"Open Grounds\">Open Grounds</option>\n          <option value=\"Lounges\">Lounges</option>\n        </select>\n        <br />\n        <label>Price</label>\n        <br />\n        <input\n          className=\"input\"\n          type=\"number\"\n          name=\"Price\"\n          value={price}\n          onChange={(e) => {\n            setPrice(e.target.value);\n          }}\n        />\n        <br />\n        <label>Description</label>\n        <br />\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"Description\"\n          value={description}\n          onChange={(e) => {\n            setDescription(e.target.value);\n          }}\n        />\n        <br />\n        <label>Location</label>\n        <br />\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"Description\"\n          value={location}\n          onChange={(e) => {\n            setLocation(e.target.value);\n          }}\n        />\n        <br />\n\n        <br />\n        <img\n          alt=\"Posts\"\n          width=\"200px\"\n          height=\"200px\"\n          src={image ? URL.createObjectURL(image) : \"\"}\n        ></img>\n\n        <br />\n        <input\n          type=\"file\"\n          onChange={(e) => {\n            setImage(e.target.files[0]);\n          }}\n        />\n        <br />\n        <button className=\"uploadBtn\" onClick={handleSubmit}>\n          Upload and Submit\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Create;\n","import React, { Fragment, useContext } from \"react\";\nimport Create from \"../Components/Create/Create\";\nimport { AuthContext } from \"../contextStore/AuthContext\";\nimport Login from \"../Components/Login/Login\";\n\nconst CreatePage = () => {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Fragment>\n      {user ? (\n        <Create />\n      ) : (\n        <>          \n          {alert(\"You must login first\")} <Login />\n        </>\n      )}\n    </Fragment>\n  );\n};\n\nexport default CreatePage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { PostContext } from \"../../contextStore/PostContext\";\nimport { Firebase } from \"../../firebase/config\";\nimport { useHistory } from \"react-router\";\nimport \"./View.css\";\n\nfunction View() {\n  let { postContent } = useContext(PostContext); //from the global store PostContext we can get information about desired product post that we want to show (the user is clicked item on the card)\n\n  const [userDetails, setUserDetails] = useState(); //we want show the details of who is posted the add and we dont know,so we want retreive user data from firebase who is posted this add\n  const history = useHistory(); //if user click the refresh of the page then PostContext data will be erased so it will throws an error so that time we want redirect this page to home page\n  useEffect(() => {\n    let { userId } = postContent;\n    if (userId === undefined) {\n      history.push(\"/\");\n    } else {\n      Firebase.firestore()\n        .collection(\"users\")\n        .where(\"id\", \"==\", userId)\n        .get()\n        .then((res) => {\n          res.forEach((doc) => {\n            setUserDetails(doc.data());\n          });\n        });\n    }\n  }, [history, postContent]);\n\n  return (\n    <div className=\"viewParentDiv\">\n      <div className=\"mainDiv\">\n        <div className=\"imageShowDiv\">\n          <img src={postContent.url} alt=\"\" />\n        </div>{\" \"}\n        <div className=\"rightSection\">\n          <div className=\"productDetails\">\n            <p className=\"price\">&#x20B9; {postContent.price} </p>\n            <span>{postContent.name}</span>\n            <p className=\"category\">{postContent.category}</p>\n            <span>{postContent.createdAt}</span>\n            <br />\n            <br />\n            <span id=\"location\">{postContent.location}</span>\n          </div>\n          <div className=\"productDescription\">\n            <p className=\"p-bold\">Product Description</p>\n            <p>{postContent.description}</p>\n          </div>\n          {userDetails && (\n            <div className=\"contactDetails\">\n              <p className=\"p-bold\">Seller details</p>\n              <p>Name : {userDetails.name}</p>\n              <p>Phone : {userDetails.phone}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default View;\n","import React from 'react'\n\nimport Header from '../Components/Header/Header'\nimport View from '../Components/View/View'\n\n\nfunction ViewPost(props) {\n    return (\n        <div>\n            \n            <Header />\n            <View/>\n            \n        </div>\n    )\n}\n\nexport default ViewPost\n","import React, { useContext, useState } from \"react\";\nimport \"./pagination.css\";\nimport { AllPostContext } from \"../../contextStore/AllPostContext\";\nfunction Pagination({ setCurrentPage }) {\n  const { allPost } = useContext(AllPostContext);\n  let [activeItem, setActiveItem] = useState(\"\");\n  let numberOfPages = [];\n  let itemsPerPage = 8;\n  for (let i = 1; i <= Math.ceil(allPost.length / itemsPerPage); i++) {\n    numberOfPages.push(i);\n  }\n  const showNextPage = (e) => {\n    let clickedPage = e.target.id;\n    setCurrentPage(clickedPage);\n    setActiveItem(Number(clickedPage));//Number() is used to convert string to number because here id is string and , === equals checks both side same so we want to convert it to number so we can conditionly check and active class implementation\n  };\n  let pagination = numberOfPages.map((pageNumber) => {\n    return (\n      <li\n        key={pageNumber}\n        id={pageNumber}\n        className={activeItem === pageNumber ? \"active\" : \"\"}\n        onClick={showNextPage}\n      >\n        {pageNumber}\n      </li>\n    );\n  });\n  return <div className=\"pagination\">{pagination}</div>;\n}\n\nexport default Pagination;\n","import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AllPostContext } from \"../../contextStore/AllPostContext\";\nimport Pagination from \"../Pagination/Pagination\";\nimport PostCards from \"../PostCards/PostCards\";\nimport \"./allposts.css\";\nfunction AllPosts() {\n  const { allPost } = useContext(AllPostContext);\n  // let displayAllPosts = allPost.map((product, index) => {\n  //   return (\n  //     <div className=\"all-post-card\">\n  //       {\" \"}\n  //       <PostCards product={product} index={index} />{\" \"}\n  //     </div>\n  //   );\n  // });\n\n  let length = allPost.length; //if user refresh the whole page context will be empty so we want to redirect the user to the home page\n  const history = useHistory();\n\n  //pagination logic and implementation will start here\n  let [currentPage, setCurrentPage] = useState(1);\n  let itemsPerPage = 8;\n  let indexOfLastDish = currentPage * itemsPerPage;\n  let indexOfFirstDish = indexOfLastDish - itemsPerPage;\n  let showTheseItems = allPost.slice(indexOfFirstDish, indexOfLastDish);\n\n  let displayThesePosts = showTheseItems.map((product, index) => {\n    return (\n      <div className=\"all-post-card\" key={index}>\n        {\" \"}\n        <PostCards product={product} index={index} />{\" \"}\n      </div>\n    );\n  });\n  return (\n    <>\n      {length !== 0 ? (\n        <div className=\"display-all-parent\">\n          <div className=\"container-allpost\">{displayThesePosts}</div>\n          <Pagination setCurrentPage={setCurrentPage} />\n        </div>\n      ) : (\n        history.push(\"/\")\n      )}\n    </>\n  );\n}\n\nexport default AllPosts;\n","import React from 'react'\nimport Header from \"../Components/Header/Header\"\nimport AllPosts from '../Components/ViewMoreAllPosts/AllPosts'\n\nfunction ViewMore() {\n    return (\n        <div>\n         <Header/>\n         <AllPosts/>        \n        </div>\n    )\n}\n\nexport default ViewMore\n","import React from 'react'\nimport {BrowserRouter as Router , Route} from 'react-router-dom'\nimport Home from '../Pages/Home'\nimport Signup from '../Pages/Signup'\nimport Login from '../Pages/Login'\nimport CreatePost from '../Pages/CreatePost'\nimport ViewPost from '../Pages/ViewPost'\nimport ViewMore from '../Pages/ViewMore'\n\n\n\n\nfunction MainRoutes() {\n    return (\n       <Router>\n           <Route exact path=\"/\">\n               <Home/>\n           </Route>\n           <Route path=\"/signup\">\n               <Signup/>\n           </Route>\n           <Route path=\"/login\">\n               <Login/>\n           </Route>\n           <Route path=\"/create\">\n               <CreatePost/>\n           </Route>\n           <Route path=\"/view\">\n               <ViewPost/>\n           </Route>\n           <Route path=\"/viewmore\">\n               <ViewMore/>\n           </Route>\n         \n           \n\n           \n       </Router>\n    )\n}\n\nexport default MainRoutes\n","import React from \"react\";\nimport \"./App.css\";\nimport ContextAllPost from \"./contextStore/AllPostContext\";\nimport ContextAuth from \"./contextStore/AuthContext\";\nimport ContextPost from \"./contextStore/PostContext\";\nimport MainRoutes from \"./Routes/MainRoutes\";\n\nfunction App() {\n  return (\n    <div>\n      <ContextAuth>\n        <ContextAllPost>\n          <ContextPost>\n            <MainRoutes />\n          </ContextPost>\n        </ContextAllPost>\n      </ContextAuth>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}